<?xml version="1.0" encoding="UTF-8"?><!--
  ~ Copyright (c) 2001-2009, TIBCO Software Inc.
  ~ Use, modification, and distribution subject to terms of license.
  --><serialization xmlns="urn:tibco.com/v3.0">
  <name>rule_node.xml</name>
  <icon/>
  <description/>
  <onBeforeDeserialize/>
  <onAfterDeserialize><![CDATA[function
myAutoRowFormatter(g,o,c,a,l,k){if(o=="jsxautorow")if(a.getChildIndex()==0){g.innerHTML="<div title=\"add new row\" class=\"jsx3ide_dynprops_autorow\" onclick=\"jsx3.IDE.getJSXById('"+c.getId()+"').commitAutoRowSession(jsx3.gui.Event.wrap(event));\">&#160;</div>";}else{g.style.left="-1px";g.style.top="-1px";g.style.width="20px";g.innerHTML='<div class="jsx3ide_dynprops_autorow_emptycell" onclick="jsx3.gui.Event.wrap(event).cancelAll();">&#160;</div>';}}function
myDeleteHandler(r){this.deleteRecord(r);var
Ib=this.getAncestorOfType(jsx3.ide.mapper.Mapper);Ib.writeMappings(true);var
Oa=Ib.getRulesTree();Oa.redrawRecord((Oa.getValue())[0]);(Ib.getEditor()).setDirty(true);}var
Ia=objJSX.getDescendantOfName("jsx_schema_mapnode_mappings");(Ia.getChild(0)).setFormatHandler(myAutoRowFormatter);(Ia.getChild(1)).setFormatHandler(myAutoRowFormatter);(Ia.getChild(2)).setFormatHandler(myAutoRowFormatter);Ia.removeMapperBinding=myDeleteHandler;var
Ia=objJSX.getDescendantOfName("jsx_schema_mapnode_restrictions");(Ia.getChild(0)).setFormatHandler(myAutoRowFormatter);Ia.removeMapperBinding=myDeleteHandler;]]></onAfterDeserialize>
  <objects>
    <object type="jsx3.gui.LayoutGrid">
      <variants jsxleft="0" jsxrelativeposition="0" jsxtop="0"/>
      <strings jsxrows="36,130,12,36,*,12,56"/>
      <object type="jsx3.gui.Block">
        <dynamics jsxpadding="@8Pixel"/>
        <strings jsxfontweight="bold" jsxtagname="div" jsxtext="&lt;nobr&gt;&lt;span style=&quot;color:#3030cf;&quot;&gt;[^]&lt;/span&gt;Mappings&lt;span class=&quot;jsx3ide_mapper_tiptext&quot; title=&quot;Mappings applied sequentially to read and/or write values for the node.&quot;&gt;[?]&lt;/span&gt;&lt;/nobr&gt;"/>
        <object type="jsx3.gui.Block">
          <variants jsxspy="1"/>
          <strings jsxtext="&lt;nobr style=&quot;position:relative;width:30px;height:12px;left:0px;top:0px;vertical-align:super;color:blue;font-size:8px;cursor:help;padding-left:8px;&quot;&gt;[APIs]&lt;/nobr&gt;"/>
          <events jsxspy="(this.getAncestorOfType(jsx3.ide.mapper.Mapper)).doSpyContextFields();"/>
        </object>
      </object>
      <object type="jsx3.gui.Block">
        <variants jsxoverflow="2"/>
        <strings jsxpadding="0 8 0 8"/>
        <object type="jsx3.gui.Block">
          <dynamics jsxbgcolor="@Solid Light" jsxborder="@Inset"/>
          <variants jsxoverflow="2"/>
          <strings jsxheight="100%" jsxwidth="100%"/>

          <object type="jsx3.gui.Matrix">
            <dynamics jsxbg="@Alternating Rows" jsxbgcolor="@Solid Medium" jsxheaderborder="@Outset NoBottom"/>
            <variants jsxautorow="2" jsxheaderheight="21" jsxpagingmodel="0" jsxreorder="0" jsxresize="0" jsxscalewidth="1" jsxselectionmodel="0" jsxshare="0" jsxsort="0"/>
            <strings jsxbodyborder="1px solid #d8d8e5" jsxname="jsx_schema_mapnode_mappings" jsxrenderingmodel="shallow" jsxxmlid="jsx_schema_mapnode_mappings_XML" jsxxslid="jsx_schema_mapnode_mappings_XSL"/>
            <events jsxafterappend="(this.getAncestorOfType(jsx3.ide.mapper.Mapper)).onInsertRow();" jsxafteredit="((this.getAncestorOfType(jsx3.ide.mapper.Mapper)).getEditor()).setDirty(true);" jsxbeforeappend="(this.getAncestorOfType(jsx3.ide.mapper.Mapper)).insertRow(&quot;mappings&quot;,objRECORD);"/>
            <xslparameters jsx_autorow_style="background-color:#f0f0f8;color:#0000ff;"/>

            <object type="jsx3.gui.Matrix.Column">
              <dynamics jsxbg="@Fade TopDown" jsxborder="@Outset"/>
              <variants jsxwidth="20"/>
              <strings jsxcellpadding="1" jsxname="jsxcol" jsxpadding="3" jsxtext="&amp;#160;" jsxvaluetemplate="@empty"/>
              <object type="jsx3.gui.ImageButton">
                <variants jsxheight="16" jsxwidth="16"/>
                <strings jsximage="images/rem.gif" jsxname="imagebutton" jsxtip="delete row"/>
                <events jsxexecute="(this.emGetSession()).matrix.removeMapperBinding((this.emGetSession()).recordId);"/>
              </object>
            </object>

            <object type="jsx3.gui.Matrix.Column">
              <dynamics jsxbg="@Fade TopDown" jsxborder="@Outset"/>
              <variants jsxwidth="20"/>
              <strings jsxcellpadding="1" jsxname="jsxcol" jsxpadding="3" jsxtext="&amp;#160;" jsxtip="prioritize row" jsxvaluetemplate="@empty"/>
              <object type="jsx3.gui.ImageButton">
                <variants jsxheight="16" jsxwidth="16"/>
                <strings jsximage="images/up.gif" jsxname="imagebutton" jsxtip="prioritize row"/>
                <events jsxexecute="((this.emGetSession()).matrix.getAncestorOfType(jsx3.ide.mapper.Mapper)).prioritizeRow((this.emGetSession()).matrix.getId(),(this.emGetSession()).recordId,true);"/>
              </object>
            </object>

            <object type="jsx3.gui.Matrix.Column">
              <dynamics jsxbg="@Fade TopDown" jsxborder="@Outset"/>
              <variants jsxwidth="20"/>
              <strings jsxcellpadding="1" jsxname="jsxcol" jsxpadding="3" jsxtext="&amp;#160;" jsxtip="deprioritize row" jsxvaluetemplate="@empty"/>
              <object type="jsx3.gui.ImageButton">
                <variants jsxheight="16" jsxwidth="16"/>
                <strings jsximage="images/down.gif" jsxname="imagebutton" jsxtip="deprioritize row"/>
                <events jsxexecute="((this.emGetSession()).matrix.getAncestorOfType(jsx3.ide.mapper.Mapper)).prioritizeRow((this.emGetSession()).matrix.getId(),(this.emGetSession()).recordId,false);"/>
              </object>
            </object>

            <object type="jsx3.gui.Matrix.Column">
              <dynamics jsxbg="@Fade TopDown" jsxborder="@Outset"/>
              <variants jsxwidth="110"/>
              <strings jsxcellpadding="3 3 3 4" jsxname="jsxcol" jsxpadding="2" jsxpath="name" jsxtext="Type*" jsxtip="The type of the mapping. For example, a DOM mapping to a GUI object" jsxvaluetemplate="&#10;              &lt;xsl:template xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;&#10;                &lt;div style=&quot;position:relative;background-image:url(JSX/images/select/arrowmask.gif);background-repeat:no-repeat;background-position:right top;&quot;&gt;&lt;xsl:value-of select=&quot;{0}&quot;/&gt;&amp;#160;&lt;/div&gt;&#10;              &lt;/xsl:template&gt;&#10;             "/>
              <object type="jsx3.gui.Select">
                <dynamics jsxcolor="@Matrix Edit Color"/>
                <strings jsxdisplay="none" jsxname="jsxSelectMask" jsxxmlurl="xml/maptypes.xml"/>
              </object>
            </object>

            <object type="jsx3.gui.Matrix.Column">
              <dynamics jsxbg="@Fade TopDown" jsxborder="@Outset NoRight"/>
              <strings jsxcellpadding="3" jsxname="jsxcol" jsxpadding="2" jsxpath="value" jsxtext="Path / Value" jsxtip="an identifier appropriate to the map type. For example, if a DOM mapping, the name of the GUI object; if a CDF Document mapping, the document name" jsxwidth="*"/>
              <object type="jsx3.gui.TextBox">
                <dynamics jsxcolor="@Matrix Edit Color"/>
                <variants jsxheight="40" jsxtype="1"/>
                <strings jsxname="jsxTextMask" jsxoverflow="auto"/>
                <events jsxdblclick="this.setHeight(this.getHeight()+20,true);objEVENT.cancelBubble();"/>
              </object>
            </object>

          </object>
        </object>
      </object>
      <object type="jsx3.gui.Block">
        <dynamics jsxborder="@Dashed Bottom"/>
        <strings jsxpadding="0 8 0 0" jsxtextalign="right"/>
      </object>
      <object type="jsx3.gui.Block">
        <dynamics jsxpadding="@8Pixel"/>
        <strings jsxfontweight="bold" jsxtext="&#10;        &lt;span style=&quot;color:orange;&quot;&gt;[R]&lt;/span&gt;Restrictions&lt;span style=&quot;vertical-align:super;color:blue;font-size:8px;cursor:help;&quot; title=&quot;Restrictions can be used to validate user input.&quot;&gt;[?]&lt;/span&gt;&#10;      "/>
      </object>
      <object type="jsx3.gui.Block">
        <variants jsxoverflow="2"/>
        <strings jsxpadding="0 8 0 8"/>
        <object type="jsx3.gui.Block">
          <dynamics jsxbgcolor="@Solid Light" jsxborder="@Inset"/>
          <variants jsxoverflow="2"/>
          <strings jsxheight="100%" jsxwidth="100%"/>

          <object type="jsx3.gui.Matrix">
            <dynamics jsxbg="@Alternating Rows" jsxbgcolor="@Solid Medium" jsxheaderborder="@Outset NoBottom"/>
            <variants jsxautorow="2" jsxgrowby="0" jsxheaderheight="21" jsxpagingmodel="0" jsxreorder="0" jsxresize="0" jsxscalewidth="1" jsxselectionmodel="0" jsxshare="0" jsxsort="0"/>
            <strings jsxbodyborder="1px solid #d8d8e5" jsxname="jsx_schema_mapnode_restrictions" jsxrenderingmodel="shallow" jsxxmlid="jsx_schema_mapnode_restrictions_XML" jsxxslid="jsx_schema_mapnode_restrictions_XSL"/>
            <events jsxafterappend="(this.getAncestorOfType(jsx3.ide.mapper.Mapper)).onInsertRow();" jsxafteredit="((this.getAncestorOfType(jsx3.ide.mapper.Mapper)).getEditor()).setDirty(true);" jsxbeforeappend="(this.getAncestorOfType(jsx3.ide.mapper.Mapper)).insertRow(&quot;restrictions&quot;,objRECORD);"/>
            <xslparameters jsx_autorow_style="background-color:#f0f0f8;color:#0000ff;"/>

            <object type="jsx3.gui.Matrix.Column">
              <dynamics jsxbg="@Fade TopDown" jsxborder="@Outset"/>
              <variants jsxwidth="20"/>
              <strings jsxcellpadding="1" jsxname="jsxcol" jsxpadding="3" jsxtext="&amp;#160;" jsxvaluetemplate="@empty"/>
              <object type="jsx3.gui.ImageButton">
                <variants jsxheight="16" jsxwidth="16"/>
                <strings jsximage="images/rem.gif" jsxname="imagebutton" jsxtip="delete row"/>
                <events jsxexecute="(this.emGetSession()).matrix.removeMapperBinding((this.emGetSession()).recordId);"/>
              </object>
            </object>

            <object type="jsx3.gui.Matrix.Column">
              <dynamics jsxbg="@Fade TopDown" jsxborder="@Outset"/>
              <variants jsxwidth="120"/>
              <strings jsxcellpadding="3 3 3 4" jsxname="jsxcol" jsxpadding="2" jsxpath="name" jsxtext="Type" jsxtip="The type of the restriction. For example: pattern, enumeration" jsxvaluetemplate="&#10;              &lt;xsl:template xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;&#10;                &lt;div style=&quot;position:relative;background-image:url(JSX/images/select/arrowmask.gif);background-repeat:no-repeat;background-position:right top;&quot;&gt;&lt;xsl:value-of select=&quot;{0}&quot;/&gt;&amp;#160;&lt;/div&gt;&#10;              &lt;/xsl:template&gt;&#10;             "/>
              <object type="jsx3.gui.Select">
                <dynamics jsxcolor="@Matrix Edit Color"/>
                <strings jsxname="jsxComboMask" jsxxmlurl="xml/restrictiontypes.xml"/>
              </object>
            </object>

            <object type="jsx3.gui.Matrix.Column">
              <dynamics jsxbg="@Fade TopDown" jsxborder="@Outset NoRight"/>
              <strings jsxcellpadding="3" jsxname="jsxcol" jsxpadding="2" jsxpath="value" jsxtext="Value" jsxtip="The restriction value. For example, if pattern, a regular expression such as [A-Z]*-123" jsxwidth="*"/>
              <object type="jsx3.gui.TextBox">
                <dynamics jsxcolor="@Matrix Edit Color"/>
                <variants jsxheight="40" jsxtype="1"/>
                <strings jsxdisplay="none" jsxname="jsxTextMask" jsxoverflow="auto"/>
                <events jsxdblclick="this.setHeight(this.getHeight()+20,true);objEVENT.cancelBubble();"/>
              </object>
            </object>

          </object>
        </object>
      </object>
      <object type="jsx3.gui.Block">
        <dynamics jsxborder="@Dashed Bottom"/>
        <strings jsxpadding="0 8 0 0" jsxtextalign="right"/>
      </object>
      <object type="jsx3.gui.Block">
        <dynamics jsxbgcolor="@Solid Medium" jsxpadding="@8Pixel"/>
        <variants jsxoverflow="2"/>
        <strings/>
        <object type="jsx3.gui.Block">
          <variants jsxheight="20"/>
          <strings jsxfontweight="bold" jsxtagname="div" jsxtext="&#10;          &lt;nobr&gt;&lt;span style=&quot;color:#01B40A;&quot;&gt;[&amp;amp;]&lt;/span&gt;Repeat When&lt;span style=&quot;vertical-align:super;color:blue;font-size:8px;cursor:help;&quot; title=&quot;as long as the following JavaScript statement evaluates to true, this branch in the rules tree will be run again&quot;&gt;[?]&lt;/span&gt;&lt;/nobr&gt;&#10;        "/>
        </object>
        <object type="jsx3.gui.TextBox">
          <dynamics jsxbg="@Grid Lines"/>
          <variants jsxheight="18" jsxtype="1"/>
          <strings jsxname="jsx_schema_mapnode_repeat" jsxvalue="" jsxwidth="100%"/>
          <events jsxblur="(this.getAncestorOfType(jsx3.ide.mapper.Mapper)).writeMappings(true);" jsxkeydown="jsx3.ide.doTextEditorKeyDown(objEVENT,this);"/>
        </object>
      </object>
    </object>
  </objects>
</serialization>