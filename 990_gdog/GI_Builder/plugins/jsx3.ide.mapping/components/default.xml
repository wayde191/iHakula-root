<?xml version="1.0" encoding="UTF-8"?><!--
  ~ Copyright (c) 2001-2009, TIBCO Software Inc.
  ~ Use, modification, and distribution subject to terms of license.
  --><serialization xmlns="urn:tibco.com/v3.0">
 <onAfterDeserialize/>
  <object type="jsx3.gui.LayoutGrid">
   <variants jsxleft="0" jsxoverflow="2" jsxrelativeposition="0" jsxtop="0"/>
   <strings jsxheight="100%" jsxhelpid="ide.mapper.input" jsxrows="22,*" jsxwidth="100%"/>
    <object type="jsx3.gui.Block">
     <dynamics jsxborder="@Outset Top"/>
     <variants jsxoverflow="2"/>
     <strings jsxbgcolor="#60709f" jsxcolor="#ffffff" jsxfontweight="normal" jsxheight="100%" jsxpadding="1 1 1 4" jsxtext="" jsxtip="original schema definition for the selected node in the Rules Tree" jsxwidth="100%"/>
      <object type="jsx3.gui.RadioButton">
       <dynamics jsxcolor="@Light"/>
       <variants jsxheight="18" jsxselected="1"/>
       <strings jsxgroupname="jsx_schema_input_type" jsxmargin="0 4 0 0" jsxname="jsx_schema_rdo_input_type_wsdl" jsxtext="WSDL" jsxtip="use a WSDL as the starting point for creating a map" jsxvalue="wsdl"/>
       <events jsxselect="(this.getAncestorOfType(jsx3.ide.mapper.Mapper)).toggleInputType(this.getValue());"/>
      </object>
      <object type="jsx3.gui.RadioButton">
       <dynamics jsxcolor="@Light"/>
       <variants jsxheight="18"/>
       <strings jsxgroupname="jsx_schema_input_type" jsxmargin="0 4 0 0" jsxname="jsx_schema_rdo_input_type_xml" jsxtext="XML/XHTML/Schema" jsxtip="use XML or Schema as the starting point for creating a map" jsxvalue="xml"/>
       <events jsxselect="(this.getAncestorOfType(jsx3.ide.mapper.Mapper)).toggleInputType(this.getValue());"/>
      </object>
      <object type="jsx3.gui.RadioButton">
       <dynamics jsxcolor="@Light"/>
       <variants jsxheight="18"/>
       <strings jsxgroupname="jsx_schema_input_type" jsxmargin="0 4 0 0" jsxname="jsx_schema_rdo_input_type_json" jsxtext="JSON" jsxtip="use JSON as the starting point for creating a map" jsxvalue="json"/>
       <events jsxselect="(this.getAncestorOfType(jsx3.ide.mapper.Mapper)).toggleInputType(this.getValue());"/>
      </object>
    </object>
    <object type="jsx3.gui.Block">
     <dynamics jsxbgcolor="@Solid Medium" jsxborder="@Inset"/>
     <variants jsxoverflow="1"/>
     <strings jsxheight="100%" jsxname="jsx_shema_input_types" jsxwidth="100%"/>
      <include async="true" src="components/Inputs/wsdl.xml"/>
    </object>
  </object>
</serialization>