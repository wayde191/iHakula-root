<?xml version="1.0" encoding="UTF-8"?>
<class access="public" id="class:jsx3.gui.HotKey" name="jsx3.gui.HotKey" package="jsx3.gui" shortname="HotKey" since="3.2&#10; ">
  <text>Encapsulates a keydown event listener that is invoked by a certain combination of keys pressed simultaneously.</text>
  <see idfk="method:registerHotKey" source="jsx3.gui.Interactive">jsx3.gui.Interactive.registerHotKey()</see>
  <see idfk="method:doKeyBinding" source="jsx3.gui.Form">jsx3.gui.Form.doKeyBinding()</see>
  <superclass id="super:0" loaded="1" name="Object"/>
  <superclass direct="1" id="super:1" loaded="1" name="jsx3.lang.Object"/>
  <implements direct="1" id="implements:0" loaded="1" name="jsx3.util.EventDispatcher"/>
  <field access="public" class="jsx3.gui.HotKey" final="1" fullname="jsx3.gui.HotKey.WAS_INVOKED" id="sfield:WAS_INVOKED" name="WAS_INVOKED" static="1" value="&quot;invoked&quot;">
    <type link="1" name="String"/>
    <text> Event type published just after a hot key is invoked.</text>
  </field>
  <method access="public" id="smethod:valueOf" name="valueOf" static="1">
    <param name="strKey" text="">
      <type link="1" name="String"/>
    </param>
    <param name="fctCallback" text="">
      <type link="1" name="Function"/>
    </param>
    <return text="">
      <type link="1" name="jsx3.gui.HotKey"/>
    </return>
  </method>
  <method access="public" id="method:getKeyCode" name="getKeyCode">
    <return text="">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns the keycode that this hot key responds to.</text>
  </method>
  <method access="public" id="method:isMatch" name="isMatch">
    <param name="objEvent" text="">
      <type link="1" name="jsx3.gui.Event"/>
    </param>
    <return text="">
      <type class="Boolean" link="1" name="boolean"/>
    </return>
    <text>Returns whether this hot key should be invoked for the keydown event <code>objEvent</code>.</text>
  </method>
  <method access="public" id="method:invoke" name="invoke">
    <param name="objThis" text="">
      <type link="1" name="Object"/>
    </param>
    <param name="arrArgs" text="">
      <type link="1" name="Array">
        <type link="1" name="Object"/>
      </type>
    </param>
    <return text="this method returns whatever value was returned by the hot key callback function.&#10;   ">
      <type link="1" name="Object"/>
    </return>
    <text>Invokes this hot key by executing its callback function. This hot key also publishes a <code>WAS_INVOKED</code>
event through the event dispatcher interface.</text>
  </method>
  <method access="public" id="method:isEnabled" name="isEnabled">
    <return text="">
      <type class="Boolean" link="1" name="boolean"/>
    </return>
    <text>Returns whether this hot key is enabled.</text>
  </method>
  <method access="public" id="method:setEnabled" name="setEnabled">
    <param name="bEnabled" text="">
      <type class="Boolean" link="1" name="boolean"/>
    </param>
    <text>Sets whether this hot key is enabled. Hot keys may be turned off temporarily by sending <code>false</code> to 
this method.</text>
  </method>
  <method access="public" id="method:isDestroyed" name="isDestroyed">
    <return text="">
      <type class="Boolean" link="1" name="boolean"/>
    </return>
    <text>Returns whether this hot key had been destoyed.</text>
  </method>
  <method access="public" id="method:destroy" name="destroy">
    <text>Destroys this hot key. Once a hot key is destroyed it cannot be invoked again. 
   </text>
  </method>
  <method access="public" id="method:toString" name="toString">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <overrides id="overrides:toString" idfk="method:toString" name="toString" source="jsx3.lang.Object"/>
  </method>
  <method access="public" id="smethod:keyDownCharToCode" name="keyDownCharToCode" static="1">
    <param name="strChar" text="the string representation of a key.">
      <type link="1" name="String"/>
    </param>
    <return text="the keycode.&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Converts the string representation of a keyboard key to an integer keycode. This keycode will match the keycode
value of a <code>jsx3.gui.Event</code> of type <code>keydown</code>. 
<p/>
The following string representations are supported:
<ul>
  <li>alpha numeric characters: <code>A-Z</code>, <code>a-z</code>, <code>0-9</code>
        </li>
  <li>the punctuation keys in the string: <code>";,./'[]\-=`"</code>
        </li>
  <li>functions keys: <code>F1-F15</code>
        </li>
  <li>special keys: <code>enter</code>, <code>esc</code>, <code>tab</code>, <code>del</code>, <code>space</code>, 
    <code>backspace</code>, <code>up</code>, <code>down</code>, <code>left</code>, <code>right</code>, 
    <code>insert</code>, <code>home</code>, <code>end</code>, <code>pgup</code>, <code>pgdn</code>.</li>
</ul>
    </text>
  </method>
  <method id="method:publish" idfk="method:publish" inherited="1" name="publish" source="jsx3.util.EventDispatcher"/>
  <method id="method:subscribe" idfk="method:subscribe" inherited="1" name="subscribe" source="jsx3.util.EventDispatcher"/>
  <method id="method:unsubscribe" idfk="method:unsubscribe" inherited="1" name="unsubscribe" source="jsx3.util.EventDispatcher"/>
  <method id="method:unsubscribeAll" idfk="method:unsubscribeAll" inherited="1" name="unsubscribeAll" source="jsx3.util.EventDispatcher"/>
  <method id="method:clone" idfk="method:clone" inherited="1" name="clone" source="jsx3.lang.Object"/>
  <method id="method:equals" idfk="method:equals" inherited="1" name="equals" source="jsx3.lang.Object"/>
  <method id="method:eval" idfk="method:eval" inherited="1" name="eval" source="jsx3.lang.Object"/>
  <method id="method:getClass" idfk="method:getClass" inherited="1" name="getClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOf" idfk="method:getInstanceOf" inherited="1" name="getInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfClass" idfk="method:getInstanceOfClass" inherited="1" name="getInstanceOfClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfPackage" idfk="method:getInstanceOfPackage" inherited="1" name="getInstanceOfPackage" source="jsx3.lang.Object"/>
  <method id="method:instanceOf" idfk="method:instanceOf" inherited="1" name="instanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isInstanceOf" idfk="method:isInstanceOf" inherited="1" name="isInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isSubclassOf" idfk="method:isSubclassOf" inherited="1" name="isSubclassOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:jsxmix" idfk="method:jsxmix" inherited="1" name="jsxmix" source="jsx3.lang.Object"/>
  <method id="method:jsxsuper" idfk="method:jsxsuper" inherited="1" name="jsxsuper" source="jsx3.lang.Object"/>
  <method id="method:jsxsupermix" idfk="method:jsxsupermix" inherited="1" name="jsxsupermix" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:setInstanceOf" idfk="method:setInstanceOf" inherited="1" name="setInstanceOf" source="jsx3.lang.Object"/>
</class>
