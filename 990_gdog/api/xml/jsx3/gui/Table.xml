<?xml version="1.0" encoding="UTF-8"?>
<class access="public" id="class:jsx3.gui.Table" name="jsx3.gui.Table" package="jsx3.gui" shortname="Table" since="3.5&#10; ">
  <text>A lightweight control that displays CDF data in an HTML table.  Supports both single- and multi-selection
modes. Data can be sorted by clicking on column labels.  Output and output formatting can be customized using
a combination of XSLT, inline CSS properties, or named CSS rules.  The columns
for this control are defined within the object model and are not defined
in the DOM as child objects.
<p/>
The Table class by default supports the following CDF attributes:
<ul>
<li>
        <code>jsxid</code>
      </li>
<li>
        <code>jsxselected</code>
      </li>
<li>
        <code>jsxstyle</code>
      </li>
<li>
        <code>jsxclass</code>
      </li>
<li>
        <code>jsximg</code>
      </li>
<li>
        <code>jsxtip</code>
      </li>
<li>
        <code>jsxunselectable</code>
      </li>
<li>
        <code>jsxexecute</code>
      </li>
</ul>
This class publishes the following model events:
<ul>
<li>
        <code>EXECUTE</code> –</li>
<li>
        <code>MENU</code> –</li>
<li>
        <code>CHANGE</code> –</li>
<li>
        <code>SPYGLASS</code> –</li>
</ul>
  </text>
  <superclass id="super:0" loaded="1" name="Object"/>
  <superclass id="super:1" loaded="1" name="jsx3.lang.Object"/>
  <superclass id="super:2" loaded="1" name="jsx3.app.Model"/>
  <superclass id="super:3" loaded="1" name="jsx3.gui.Painted"/>
  <superclass direct="1" id="super:4" loaded="1" name="jsx3.gui.Block"/>
  <implements direct="1" id="implements:0" loaded="1" name="jsx3.gui.Form"/>
  <implements id="implements:1" loaded="1" name="jsx3.gui.Interactive"/>
  <implements id="implements:2" loaded="1" name="jsx3.util.EventDispatcher"/>
  <implements direct="1" id="implements:3" loaded="1" name="jsx3.xml.CDF"/>
  <implements direct="1" id="implements:4" loaded="1" name="jsx3.xml.Cacheable"/>
  <field access="public" class="jsx3.gui.Table" fullname="jsx3.gui.Table.DEFAULTXSLURL" id="sfield:DEFAULTXSLURL" name="DEFAULTXSLURL" static="1">
    <type link="1" name="String"/>
    <text>   </text>
  </field>
  <field access="public" class="jsx3.gui.Table" final="1" fullname="jsx3.gui.Table.TYPE_TEXT" id="sfield:TYPE_TEXT" name="TYPE_TEXT" static="1" value="&quot;text&quot;">
    <type link="1" name="String"/>
    <text> text (default)</text>
  </field>
  <field access="public" class="jsx3.gui.Table" final="1" fullname="jsx3.gui.Table.TYPE_NUMBER" id="sfield:TYPE_NUMBER" name="TYPE_NUMBER" static="1" value="&quot;number&quot;">
    <type link="1" name="String"/>
    <text> number</text>
  </field>
  <field access="public" class="jsx3.gui.Table" fullname="jsx3.gui.Table.SELECTION_BG" id="sfield:SELECTION_BG" name="SELECTION_BG" static="1" value="&quot;jsx:///images/table/select.gif&quot;">
    <type link="1" name="String"/>
    <text> jsx:///images/table/select.gif
   </text>
  </field>
  <field access="public" class="jsx3.gui.Table" final="1" fullname="jsx3.gui.Table.SELECTION_UNSELECTABLE" id="sfield:SELECTION_UNSELECTABLE" name="SELECTION_UNSELECTABLE" static="1" value="0">
    <type class="Number" link="1" name="int"/>
    <text> Enum value for the <code>multiSelect</code> property indicating an unselectable table.</text>
  </field>
  <field access="public" class="jsx3.gui.Table" final="1" fullname="jsx3.gui.Table.SELECTION_ROW" id="sfield:SELECTION_ROW" name="SELECTION_ROW" static="1" value="1">
    <type class="Number" link="1" name="int"/>
    <text> Enum value for the <code>multiSelect</code> property indicating a multi-select table.</text>
  </field>
  <field access="public" class="jsx3.gui.Table" final="1" fullname="jsx3.gui.Table.SELECTION_MULTI_ROW" id="sfield:SELECTION_MULTI_ROW" name="SELECTION_MULTI_ROW" static="1" value="2">
    <type class="Number" link="1" name="int"/>
    <text> Enum value for the <code>multiSelect</code> property indicating a single-select table.</text>
  </field>
  <field access="public" class="jsx3.gui.Table" final="1" fullname="jsx3.gui.Table.SORT_ASCENDING" id="sfield:SORT_ASCENDING" name="SORT_ASCENDING" static="1" value="&quot;ascending&quot;">
    <type link="1" name="String"/>
    <text> ascending</text>
  </field>
  <field access="public" class="jsx3.gui.Table" final="1" fullname="jsx3.gui.Table.SORT_DESCENDING" id="sfield:SORT_DESCENDING" name="SORT_DESCENDING" static="1" value="&quot;descending&quot;">
    <type link="1" name="String"/>
    <text> descending</text>
  </field>
  <field access="public" class="jsx3.gui.Table" fullname="jsx3.gui.Table.SORT_DESCENDING_IMG" id="sfield:SORT_DESCENDING_IMG" name="SORT_DESCENDING_IMG" static="1">
    <type link="1" name="String"/>
    <text> jsx:///images/table/sort_desc.gif (default)
   </text>
  </field>
  <field access="public" class="jsx3.gui.Table" fullname="jsx3.gui.Table.SORT_ASCENDING_IMG" id="sfield:SORT_ASCENDING_IMG" name="SORT_ASCENDING_IMG" static="1">
    <type link="1" name="String"/>
    <text> jsx:///images/table/sort_asc.gif (default)
   </text>
  </field>
  <field access="public" class="jsx3.gui.Table" fullname="jsx3.gui.Table.DEFAULT_HEADER_HEIGHT" id="sfield:DEFAULT_HEADER_HEIGHT" name="DEFAULT_HEADER_HEIGHT" static="1" value="20">
    <type class="Number" link="1" name="int"/>
    <text> 20
   </text>
  </field>
  <field access="public" class="jsx3.gui.Table" fullname="jsx3.gui.Table.DEFAULT_CELL_VALUE_TEMPLATE" id="sfield:DEFAULT_CELL_VALUE_TEMPLATE" name="DEFAULT_CELL_VALUE_TEMPLATE" static="1">
    <type link="1" name="jsx3.xml.Document"/>
    <text> Default XSL template for rendering the cell value for all cells. This template can be
replaced with a custom XSL template.  The template should <code>match</code> on a record element (match="record") and will
be used for all data cells in the body of the table. This template will be passed one named parameter (xsl:param) named
<code>attname</code>, the name of the attribute to which the column is mapped.</text>
    <see idfk="method:setValueTemplate" source="jsx3.gui.Table">setValueTemplate</see>
  </field>
  <constructor access="public" id="method:init" name="init">
    <param name="strName" text="unique name distinguishing this object from all other JSX GUI objects in the JSX application&#10;   ">
      <type link="1" name="String"/>
    </param>
    <text>instance initializer</text>
  </constructor>
  <method access="public" id="method:doValidate" name="doValidate">
    <return text="one of: jsx3.gui.Form.STATEINVALID or jsx3.gui.Form.STATEVALID&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>validates the Table; if the Table is set to 'required', a selection must be made to pass validation. Otherwise, a Table will always pass validation</text>
    <overridesmix id="overrides:doValidate" idfk="method:doValidate" name="doValidate" source="jsx3.gui.Form"/>
  </method>
  <method access="public" id="method:getValue" name="getValue">
    <return text="">
      <type link="1" name="String"/>
      <type link="1" name="Array">
        <type link="1" name="String"/>
      </type>
    </return>
    <text>Returns an array of selected values (or empty array) if the selection model is <code>Table.SELECTION_MULTI_ROW</code>. Returns a string (or null)
for the other selection models</text>
    <overridesmix id="overrides:getValue" idfk="method:getValue" name="getValue" source="jsx3.gui.Form"/>
  </method>
  <method access="public" id="method:setValue" name="setValue">
    <param name="strId" text="jsxid attribute for the CDF record(s) to select">
      <type link="1" name="String"/>
      <type link="1" name="Array">
        <type link="1" name="String"/>
      </type>
    </param>
    <return text="this object.&#10;    ">
      <type link="1" name="jsx3.gui.Table"/>
    </return>
    <text>Sets the value of this table. Deselects all existing selections. Scrolls the first record into view.</text>
    <overridesmix id="overrides:setValue" idfk="method:setValue" name="setValue" source="jsx3.gui.Form"/>
  </method>
  <method access="public" id="method:getContentElement" name="getContentElement">
    <param name="strCdfId" text="jsxid property for CDF record">
      <type link="1" name="String"/>
    </param>
    <param name="strAttName" text="attribute name on the CDF record. For example, &lt;code&gt;jsxtext&lt;/code&gt;">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="HTMLElement"/>
    </return>
    <text>Returns the on-screen cell that represents the intersection of the row identified
by <code>strCdfId</code> and the first cell mapped to the named CDF attribute, <code>strAttName</code>.</text>
  </method>
  <method access="public" id="method:focusRowById" name="focusRowById">
    <param name="strCdfId" text="jsxid property for the corresponding CDF record&#10;   ">
      <type link="1" name="String"/>
    </param>
    <text>Applies focus to the on-screen row indentified by the CDF record id that generated it</text>
  </method>
  <method access="public" id="method:getSelectionModel" name="getSelectionModel">
    <param name="strDefault" text="The default value to use if null">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns the selection model. If no selection type is specified, the instance will employ single row selection (<code>SELECTION_ROW</code>)</text>
  </method>
  <method access="public" id="method:setSelectionModel" name="setSelectionModel">
    <param name="intType" text="one of Table: .SELECTION_UNSELECTABLE, .SELECTION_ROW, .SELECTION_MULTI_ROW&#10;   ">
      <type class="Number" link="1" name="int"/>
    </param>
    <text>Sets the selection model</text>
  </method>
  <method access="public" id="method:getSelectionBG" name="getSelectionBG">
    <param name="strDefault" text="The default value to use if null (Table.SELECTION_BG)">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS string to apply to a Row/Cell when it has focus</text>
  </method>
  <method access="public" id="method:setSelectionBG" name="setSelectionBG">
    <param name="strURL" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the URL for the image to use (as the repeating background image) to denote selection.</text>
  </method>
  <method access="public" id="method:getSelectedNodes" name="getSelectedNodes">
    <return text="">
      <type link="1" name="jsx3.util.List">
        <type link="1" name="jsx3.xml.Entity"/>
      </type>
    </return>
    <text>Returns the collection of selected records.</text>
  </method>
  <method access="public" id="method:getSelectedIds" name="getSelectedIds">
    <return text="JavaScript array of stings&#10;     ">
      <type link="1" name="Array">
        <type link="1" name="String"/>
      </type>
    </return>
    <text>Returns the <b>jsxid(s)</b> for the selected record(s). Equivalent to <code>this.getValue()</code> except that the return value is always an Array.</text>
  </method>
  <method access="public" id="method:selectRecord" name="selectRecord">
    <param name="strRecordId" text="the jsxid of the record to select.&#10;     ">
      <type link="1" name="String"/>
    </param>
    <text>Selects a CDF record of this list. The item will be highlighted in the view and the CDF data will be updated
accordingly. If this list is a multi-select list then this selection will be added to any previous selection.</text>
  </method>
  <method access="public" id="method:deselectRecord" name="deselectRecord">
    <param name="strRecordId" text="the jsxid of the record to deselect.&#10;     ">
      <type link="1" name="String"/>
    </param>
    <text>Deselects a CDF record within the Table. Both the view and the data model (CDF) will be updated</text>
  </method>
  <method access="public" id="method:deselectAllRecords" name="deselectAllRecords">
    <text>Deselects all selected CDF records.
     </text>
  </method>
  <method access="public" id="method:doSort" name="doSort">
    <param name="intSortDir" text="&lt;code&gt;jsx3.gui.Table.SORT_ASCENDING&lt;/code&gt; or &lt;code&gt;jsx3.gui.Table.SORT_DESCENDING&lt;/code&gt;.">
      <type link="1" name="String"/>
    </param>
    <text>Sorts according to the current sort path. If no sort direction is specified, the sort direction will be toggled.</text>
    <see idfk="sfield:SORT_ASCENDING" source="jsx3.gui.Table">SORT_ASCENDING</see>
    <see idfk="sfield:SORT_DESCENDING" source="jsx3.gui.Table">SORT_DESCENDING</see>
  </method>
  <method access="public" id="method:getSortPath" name="getSortPath">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the name of the CDF attribute to sort on. If no value is set an empty string is returned by default.</text>
  </method>
  <method access="public" id="method:setSortPath" name="setSortPath">
    <param name="strAttr" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the name of the CDF attribute to sort on. The records in the data source of this table are sorted
on this attribute before being painted to screen.</text>
  </method>
  <method access="public" id="method:getSortType" name="getSortType">
    <return text="&lt;code&gt;jsx3.gui.Table.TYPE_TEXT&lt;/code&gt; or &lt;code&gt;jsx3.gui.Table.TYPE_NUMBER&lt;/code&gt;&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the data type to be used for sorting this list.</text>
  </method>
  <method access="public" id="method:setSortType" name="setSortType">
    <param name="DATATYPE" text="data type for this column's data. Valid types include: jsx3.gui.Table.TYPE_TEXT and jsx3.gui.Table.TYPE_NUMBER&#10;   ">
      <type link="1" name="String"/>
    </param>
    <text>Sets the data type for the list.</text>
  </method>
  <method access="public" id="method:getSortDirection" name="getSortDirection">
    <return text="one of: jsx3.gui.Table.SORT_ASCENDING or jsx3.gui.Table.SORT_DESCENDING&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the direction (jsx3.gui.Table.SORT_ASCENDING or jsx3.gui.Table.SORT_DESCENDING) for the sorted column; if no direction specified, ascending is returned</text>
  </method>
  <method access="public" id="method:setSortDirection" name="setSortDirection">
    <param name="intSortDir" text="one of: jsx3.gui.Table.SORT_ASCENDING or jsx3.gui.Table.SORT_DESCENDING&#10;   ">
      <type link="1" name="String"/>
    </param>
    <text>Sets the direction (ascending or descending) for the sorted column.</text>
  </method>
  <method access="public" id="method:getCanSort" name="getCanSort">
    <return text="">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns whether the table is sortable. If <code>null</code> or <code>jsx3.Boolean.TRUE</code>, the instance is sortable.</text>
  </method>
  <method access="public" id="method:setCanSort" name="setCanSort">
    <param name="SORT" text="one of &lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.FALSE&lt;/code&gt;&#10;   ">
      <type class="Number" link="1" name="int"/>
    </param>
    <text>Sets whether the table is sortable.</text>
  </method>
  <method access="public" id="method:redrawRecord" name="redrawRecord">
    <param name="strRecordId"/>
    <param name="ACTION"/>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.Table"/>
    </return>
    <text>This method implements redraw support by repainting the entire control.</text>
    <overridesmix id="overrides:redrawRecord" idfk="method:redrawRecord" name="redrawRecord" source="jsx3.xml.CDF"/>
  </method>
  <method access="public" id="method:paint" name="paint">
    <return text="DHTML&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the DHTML, used for this object's on-screen VIEW</text>
    <overrides id="overrides:paint" idfk="method:paint" name="paint" source="jsx3.gui.Block"/>
  </method>
  <method access="public" id="method:repaintHead" name="repaintHead">
    <text>Paints only the header row.  Call for quick repainting of the header row and not the data rows.
   </text>
  </method>
  <method access="public" id="method:repaintData" name="repaintData">
    <text>Paints only the data rows.  Call for quick repainting of the data rows when only the source data
has changed. Does not recalculate and reprofile the box profile and resulting XSLT. Retains scroll position when possible.
   </text>
  </method>
  <method access="public" id="method:getHeaderStyle" name="getHeaderStyle">
    <param name="strDefault" text="">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS style for the HTML row containing the column headers.</text>
  </method>
  <method access="public" id="method:setHeaderStyle" name="setHeaderStyle">
    <param name="strCSS" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the CSS style properties for the HTML row containing the column headers. Multiple properties are supported.
For example: <code>background-image:url(JSXAPPS/myproject/images/bg.gif);font-family:Arial;</code>.
The following CSS properties (those affecting layout and position) are not allowed: width, height,
left, top, position, overflow, border, padding, margin.</text>
  </method>
  <method access="public" id="method:getHeaderClass" name="getHeaderClass">
    <param name="strDefault" text="">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS rule for the HTML row containing the column headers.</text>
  </method>
  <method access="public" id="method:setHeaderClass" name="setHeaderClass">
    <param name="strRuleName" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the CSS rule for the HTML row containing the column headers.  Multiple rules are supported.
For example: <code>boldText titleText</code>.
The following CSS properties (those affecting layout and position) are not allowed for the rule: width, height,
left, top, position, overflow, border, padding, margin.</text>
  </method>
  <method access="public" id="method:getRowStyle" name="getRowStyle">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS properties for the HTML row elements(s) containing the table data.</text>
  </method>
  <method access="public" id="method:setRowStyle" name="setRowStyle">
    <param name="strCSS" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the CSS properties for the HTML row element(s) containing the table data. Every row will
apply the properties defined by this value, unless an alternate row style is used, in which case, the properties are alternated
between this value and the value applied by <code>setAlternateRowStyle</code>.  Multiple properties are supported.
For example: <code>background-color:white;font-family:Arial;</code>.</text>
    <see idfk="method:setAlternateRowStyle" source="jsx3.gui.Table">setAlternateRowStyle</see>
  </method>
  <method access="public" id="method:getAlternateRowStyle" name="getAlternateRowStyle">
    <param name="strDefault" text="">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS properties for the HTML row element(s) containing the <b>alternating</b> table data rows.</text>
  </method>
  <method access="public" id="method:setAlternateRowStyle" name="setAlternateRowStyle">
    <param name="strCSS" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the CSS properties for the HTML row element(s) containing the <b>alternating</b> table data rows. Multiple properties are supported.
For example: <code>background-color:red;font-family:Arial;</code>.</text>
  </method>
  <method access="public" id="method:getCellStyle" name="getCellStyle">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS properties that will be inlined on <b>every</b> HTML cell in the body of the table.</text>
  </method>
  <method access="public" id="method:setCellStyle" name="setCellStyle">
    <param name="strCSS" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the CSS properties that will be inlined on <b>every</b> HTML cell in the body of the table. Multiple properties are supported.
For example: <code>text-align:right;background-color:#eeeeee;border-bottom:solid 1px #aeaeae;</code>.</text>
  </method>
  <method access="public" id="method:getRowClass" name="getRowClass">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS rule for the HTML row element(s) containing the table data.</text>
  </method>
  <method access="public" id="method:setRowClass" name="setRowClass">
    <param name="strRuleName" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the CSS rule for the HTML row element(s) containing the table data. Every row will
apply the rule defined by this value, unless an alternate row rule is used, in which case, the rule (classname) is alternated
between this value and the value applied by <code>setAlternateRowClass</code>.  Multiple rules are supported.
For example: <code>bodyText normalText</code>.</text>
    <see idfk="method:setAlternateRowClass" source="jsx3.gui.Table">setAlternateRowClass</see>
  </method>
  <method access="public" id="method:getAlternateRowClass" name="getAlternateRowClass">
    <param name="strDefault" text="">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS rule for the HTML row element(s) containing the <b>alternating</b> table data rows.</text>
  </method>
  <method access="public" id="method:setAlternateRowClass" name="setAlternateRowClass">
    <param name="strRuleName" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the CSS rule for the HTML row element(s) containing the <b>alternating</b> table data rows. Multiple rules are supported.
For example: <code>bodyText, normalText</code>.</text>
  </method>
  <method access="public" id="method:getCellClass" name="getCellClass">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS rule that will be applied to <b>every</b> HTML cell in the body of the table.</text>
  </method>
  <method access="public" id="method:setCellClass" name="setCellClass">
    <param name="strRuleName" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the CSS rule that will be applied to <b>every</b> HTML cell in the body of the table.
Multiple rules are supported.  For example: <code>boldText titleText</code>.</text>
  </method>
  <method access="public" id="method:getWrap" name="getWrap">
    <param name="strDefault" text="">
      <type link="1" name="String"/>
    </param>
    <return text="&lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.FALSE&lt;/code&gt;&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns whether or not the table's data cells support text-wrapping and expand vertically to display their wrapped content. If this
property is not set, the cell content will not wrap.</text>
  </method>
  <method access="public" id="method:setWrap" name="setWrap">
    <param name="WRAP" text="&lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.FALSE&lt;/code&gt;&#10;   ">
      <type class="Number" link="1" name="int"/>
    </param>
    <text>Sets whether or not the table's data cells support text-wrapping and expand vertically to display their wrapped content.</text>
  </method>
  <method access="public" id="method:getNoDataMessage" name="getNoDataMessage">
    <return text="text/HTML&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the text/HTML to display on-screen when the xml/xsl transformation for this object results in a null or empty result set</text>
  </method>
  <method access="public" id="method:getXSL" name="getXSL">
    <return text="jsx3.xml.Document instance containing valid XSL stylesheet&#10;   ">
      <type link="1" name="jsx3.xml.Document"/>
    </return>
    <text>Returns XSLT for the Table, prioritizing the acquisition in the following order: 1) check cache; 2) check jsxxsl; 3) check jsxxslurl; 4) use default</text>
    <overridesmix id="overrides:getXSL" idfk="method:getXSL" name="getXSL" source="jsx3.xml.Cacheable"/>
  </method>
  <method access="public" id="method:getValueTemplate" name="getValueTemplate">
    <param name="strDefault" text="xsl:template">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Gets the user-defined XSL template (xsl:template) that will override the defualt template defined by <code>Table.DEFAULT_CELL_VALUE_TEMPLATE</code>.</text>
  </method>
  <method access="public" id="method:setValueTemplate" name="setValueTemplate">
    <param name="TEMPLATE" text="valid xsl:template&#10;   ">
      <type link="1" name="String"/>
    </param>
    <text>Sets the user-defined XSL template that will override the defualt template defined by <code>Table.DEFAULT_CELL_VALUE_TEMPLATE</code>.
The template must resolve to a valid XSL Template when parsed.  The template should match on a record (match="record").  The template
will be passed a single XSL param (xsl:param) named <code>attname</code>.</text>
  </method>
  <method access="public" id="method:getColumnProfileDocument" name="getColumnProfileDocument">
    <return text="">
      <type link="1" name="jsx3.xml.CDF.Document"/>
    </return>
    <text>Returns a clone of the CDF document used internally to define the Columns (text, order, mapped attributes, etc).
The order of the records in this document reflects the order of the columns in the Table.  If the column profile document defined
by <code>getColumnProfile</code> is not a valid XML document, an empty CDF Document will be returned instead.
Note that if you make changes to the Document returned by this method, those
changes will only be reflected by calling  <code>setColumnProfile</code> (to update the model),
followed by a call to <code>repaint</code> (to update the view).</text>
    <see idfk="method:setColumnProfile" source="jsx3.gui.Table">setColumnProfile</see>
  </method>
  <method access="public" id="method:getColumnProfile" name="getColumnProfile">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the string of XML in CDF format representing the Column Profile Document.</text>
  </method>
  <method access="public" id="method:setColumnProfile" name="setColumnProfile">
    <param name="objCDF" text="">
      <type link="1" name="String"/>
      <type link="1" name="jsx3.xml.CDF.Document"/>
    </param>
    <text>Sets a string of XML (in CDF format) or an actual jsx3.xml.CDF.Document instance representing the Column Profile Document.
Each record in this document defines the profile for a column in the Table.  The following attributes are supported on each record:<br/>
<ul>
  <li>jsxid: The unique ID for the record (REQUIRED).</li>
  <li>jsxtext: HTML or text content to use as the column label.</li>
  <li>jsxwidth: The width of the column (pixel units are implied). For example: <code>300</code>, or <code>25%</code>.</li>
  <li>jsxpath: The name of the attribute to which this column maps (REQUIRED).</li>
  <li>jsxpathtype: The data type for the attribute. One of: <code>text</code> (default) or <code>number</code>.</li>
</ul>
<br/>
      <br/>For example:<br/>
<pre>
  &lt;data jsxid="jsxroot"&gt;
    &lt;record jsxid="a1" jsxtext="&amp;lt;b&amp;gt;Column 1&amp;lt;/b&amp;gt;" jsxpath="jsxtext"/&gt;
    &lt;record jsxid="a2" jsxtext="Column 2" jsxwidth="100" jsxpath="value" jsxpathtype="number"/&gt;
  &lt;/data&gt;
</pre>
    </text>
  </method>
  <method access="public" id="method:getRenderingContext" name="getRenderingContext">
    <param name="strDefault" text="The default value to use if null">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the jsxid of the CDF record that will serve as the <b>origin</b> when rendering the data on-screen. If not set, the
id, <b>jsxroot</b>, (which is the id for the root node, &lt;data&gt;) will be used.</text>
  </method>
  <method access="public" id="method:setRenderingContext" name="setRenderingContext">
    <param name="strJsxId" text="jsxid property for the CDF record to use as the contextual root when rendering data on-screen.">
      <type link="1" name="String"/>
    </param>
    <param name="bSuppressRepaint" text="Pass &lt;code&gt;true&lt;/code&gt; to stop the default repaint from occurring.&#10;   ">
      <type class="Boolean" link="1" name="boolean"/>
    </param>
    <text>Sets the jsxid of the CDF record that will serve as the <b>origin</b> when rendering the data on-screen.</text>
  </method>
  <method access="public" id="method:getHeaderHeight" name="getHeaderHeight">
    <param name="strDefault" text="The default value to use if null">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns the height of the header row in pixels. If this value is not set (<code>null</code>), the list will render with
the default value of <code>jsx3.gui.Table.DEFAULT_HEADER_HEIGHT</code>.</text>
  </method>
  <method access="public" id="method:setHeaderHeight" name="setHeaderHeight">
    <param name="intHeight" text="">
      <type class="Number" link="1" name="int"/>
    </param>
    <param name="bSuppressRepaint" text="Pass &lt;code&gt;true&lt;/code&gt; to stop the default repaint from occurring.&#10;Typically property updates that affect the browser-specific box model (such as height) are repainted&#10;immediately to keep the box model abstraction in sync with the native view. However, the repaint can be&#10;suppressed to avoid unnecessary reparsing of the XSLT during repeated property updates.&#10;   ">
      <type class="Boolean" link="1" name="boolean"/>
    </param>
    <text>Sets the height of the header row in pixels. Set to zero (0) to hide the header row and only render the body rows.</text>
  </method>
  <method id="method:doKeyBinding" idfk="method:doKeyBinding" inherited="1" name="doKeyBinding" source="jsx3.gui.Form"/>
  <method id="method:doReset" idfk="method:doReset" inherited="1" name="doReset" source="jsx3.gui.Form"/>
  <method id="method:getDisabledBackgroundColor" idfk="method:getDisabledBackgroundColor" inherited="1" name="getDisabledBackgroundColor" source="jsx3.gui.Form"/>
  <method id="method:getDisabledColor" idfk="method:getDisabledColor" inherited="1" name="getDisabledColor" source="jsx3.gui.Form"/>
  <method id="method:getEnabled" idfk="method:getEnabled" inherited="1" name="getEnabled" source="jsx3.gui.Form"/>
  <method id="method:getKeyBinding" idfk="method:getKeyBinding" inherited="1" name="getKeyBinding" source="jsx3.gui.Form"/>
  <method id="method:getRequired" idfk="method:getRequired" inherited="1" name="getRequired" source="jsx3.gui.Form"/>
  <method id="method:getValidationState" idfk="method:getValidationState" inherited="1" name="getValidationState" source="jsx3.gui.Form"/>
  <method id="method:setDisabledBackgroundColor" idfk="method:setDisabledBackgroundColor" inherited="1" name="setDisabledBackgroundColor" source="jsx3.gui.Form"/>
  <method id="method:setDisabledColor" idfk="method:setDisabledColor" inherited="1" name="setDisabledColor" source="jsx3.gui.Form"/>
  <method id="method:setEnabled" idfk="method:setEnabled" inherited="1" name="setEnabled" source="jsx3.gui.Form"/>
  <method id="method:setKeyBinding" idfk="method:setKeyBinding" inherited="1" name="setKeyBinding" source="jsx3.gui.Form"/>
  <method id="method:setRequired" idfk="method:setRequired" inherited="1" name="setRequired" source="jsx3.gui.Form"/>
  <method id="method:setValidationState" idfk="method:setValidationState" inherited="1" name="setValidationState" source="jsx3.gui.Form"/>
  <method id="method:clearXmlData" idfk="method:clearXmlData" inherited="1" name="clearXmlData" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:getNodeSet" idfk="method:getNodeSet" inherited="1" name="getNodeSet" source="jsx3.xml.Cacheable"/>
  <method id="method:getShareResources" idfk="method:getShareResources" inherited="1" name="getShareResources" source="jsx3.xml.Cacheable"/>
  <method id="method:getXML" idfk="method:getXML" inherited="1" name="getXML" source="jsx3.xml.Cacheable"/>
  <method id="method:getXMLId" idfk="method:getXMLId" inherited="1" name="getXMLId" source="jsx3.xml.Cacheable"/>
  <method id="method:getXMLString" idfk="method:getXMLString" inherited="1" name="getXMLString" source="jsx3.xml.Cacheable"/>
  <method id="method:getXMLTransformers" idfk="method:getXMLTransformers" inherited="1" name="getXMLTransformers" source="jsx3.xml.Cacheable"/>
  <method id="method:getXMLURL" idfk="method:getXMLURL" inherited="1" name="getXMLURL" source="jsx3.xml.Cacheable"/>
  <method id="method:getXSLId" idfk="method:getXSLId" inherited="1" name="getXSLId" source="jsx3.xml.Cacheable"/>
  <method id="method:getXSLParams" idfk="method:getXSLParams" inherited="1" name="getXSLParams" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:getXSLString" idfk="method:getXSLString" inherited="1" name="getXSLString" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:getXSLURL" idfk="method:getXSLURL" inherited="1" name="getXSLURL" source="jsx3.xml.Cacheable"/>
  <method id="method:getXmlAsync" idfk="method:getXmlAsync" inherited="1" name="getXmlAsync" source="jsx3.xml.Cacheable"/>
  <method id="method:getXmlBind" idfk="method:getXmlBind" inherited="1" name="getXmlBind" source="jsx3.xml.Cacheable"/>
  <method id="method:onXmlBinding" idfk="method:onXmlBinding" inherited="1" name="onXmlBinding" source="jsx3.xml.Cacheable"/>
  <method id="method:removeXSLParam" idfk="method:removeXSLParam" inherited="1" name="removeXSLParam" source="jsx3.xml.Cacheable"/>
  <method id="method:removeXSLParams" idfk="method:removeXSLParams" inherited="1" name="removeXSLParams" source="jsx3.xml.Cacheable"/>
  <method id="method:resetCacheData" idfk="method:resetCacheData" inherited="1" name="resetCacheData" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:resetData" idfk="method:resetData" inherited="1" name="resetData" source="jsx3.xml.Cacheable"/>
  <method id="method:resetXmlCacheData" idfk="method:resetXmlCacheData" inherited="1" name="resetXmlCacheData" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:resetXslCacheData" idfk="method:resetXslCacheData" inherited="1" name="resetXslCacheData" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:setNodeSet" idfk="method:setNodeSet" inherited="1" name="setNodeSet" source="jsx3.xml.Cacheable"/>
  <method id="method:setShareResources" idfk="method:setShareResources" inherited="1" name="setShareResources" source="jsx3.xml.Cacheable"/>
  <method id="method:setSourceXML" idfk="method:setSourceXML" inherited="1" name="setSourceXML" source="jsx3.xml.Cacheable"/>
  <method id="method:setXMLId" idfk="method:setXMLId" inherited="1" name="setXMLId" source="jsx3.xml.Cacheable"/>
  <method id="method:setXMLString" idfk="method:setXMLString" inherited="1" name="setXMLString" source="jsx3.xml.Cacheable"/>
  <method id="method:setXMLTransformers" idfk="method:setXMLTransformers" inherited="1" name="setXMLTransformers" source="jsx3.xml.Cacheable"/>
  <method id="method:setXMLURL" idfk="method:setXMLURL" inherited="1" name="setXMLURL" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:setXSLId" idfk="method:setXSLId" inherited="1" name="setXSLId" source="jsx3.xml.Cacheable"/>
  <method id="method:setXSLParam" idfk="method:setXSLParam" inherited="1" name="setXSLParam" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:setXSLString" idfk="method:setXSLString" inherited="1" name="setXSLString" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:setXSLURL" idfk="method:setXSLURL" inherited="1" name="setXSLURL" source="jsx3.xml.Cacheable"/>
  <method id="method:setXmlAsync" idfk="method:setXmlAsync" inherited="1" name="setXmlAsync" source="jsx3.xml.Cacheable"/>
  <method id="method:setXmlBind" idfk="method:setXmlBind" inherited="1" name="setXmlBind" source="jsx3.xml.Cacheable"/>
  <method id="method:adoptRecord" idfk="method:adoptRecord" inherited="1" name="adoptRecord" source="jsx3.xml.CDF"/>
  <method id="method:adoptRecordBefore" idfk="method:adoptRecordBefore" inherited="1" name="adoptRecordBefore" source="jsx3.xml.CDF"/>
  <method id="method:convertProperties" idfk="method:convertProperties" inherited="1" name="convertProperties" source="jsx3.xml.CDF"/>
  <method id="method:deleteRecord" idfk="method:deleteRecord" inherited="1" name="deleteRecord" source="jsx3.xml.CDF"/>
  <method id="method:deleteRecordProperty" idfk="method:deleteRecordProperty" inherited="1" name="deleteRecordProperty" source="jsx3.xml.CDF"/>
  <method id="method:getRecord" idfk="method:getRecord" inherited="1" name="getRecord" source="jsx3.xml.CDF"/>
  <method id="method:getRecordIds" idfk="method:getRecordIds" inherited="1" name="getRecordIds" source="jsx3.xml.CDF"/>
  <method id="method:getRecordNode" idfk="method:getRecordNode" inherited="1" name="getRecordNode" source="jsx3.xml.CDF"/>
  <method id="method:insertRecord" idfk="method:insertRecord" inherited="1" name="insertRecord" source="jsx3.xml.CDF"/>
  <method id="method:insertRecordBefore" idfk="method:insertRecordBefore" inherited="1" name="insertRecordBefore" source="jsx3.xml.CDF"/>
  <method id="method:insertRecordNode" idfk="method:insertRecordNode" inherited="1" name="insertRecordNode" source="jsx3.xml.CDF"/>
  <method id="method:insertRecordProperty" idfk="method:insertRecordProperty" inherited="1" name="insertRecordProperty" source="jsx3.xml.CDF"/>
  <method deprecated="1" id="method:reloadFromSource" idfk="method:reloadFromSource" inherited="1" name="reloadFromSource" source="jsx3.xml.CDF"/>
  <method id="method:getBackground" idfk="method:getBackground" inherited="1" name="getBackground" source="jsx3.gui.Block"/>
  <method id="method:getBackgroundColor" idfk="method:getBackgroundColor" inherited="1" name="getBackgroundColor" source="jsx3.gui.Block"/>
  <method id="method:getBorder" idfk="method:getBorder" inherited="1" name="getBorder" source="jsx3.gui.Block"/>
  <method id="method:getCDFAttribute" idfk="method:getCDFAttribute" inherited="1" name="getCDFAttribute" source="jsx3.gui.Block"/>
  <method id="method:getCDFId" idfk="method:getCDFId" inherited="1" name="getCDFId" source="jsx3.gui.Block"/>
  <method id="method:getCSSOverride" idfk="method:getCSSOverride" inherited="1" name="getCSSOverride" source="jsx3.gui.Block"/>
  <method id="method:getClassName" idfk="method:getClassName" inherited="1" name="getClassName" source="jsx3.gui.Block"/>
  <method id="method:getColor" idfk="method:getColor" inherited="1" name="getColor" source="jsx3.gui.Block"/>
  <method id="method:getCursor" idfk="method:getCursor" inherited="1" name="getCursor" source="jsx3.gui.Block"/>
  <method id="method:getDimensions" idfk="method:getDimensions" inherited="1" name="getDimensions" source="jsx3.gui.Block"/>
  <method id="method:getDisplay" idfk="method:getDisplay" inherited="1" name="getDisplay" source="jsx3.gui.Block"/>
  <method id="method:getFontName" idfk="method:getFontName" inherited="1" name="getFontName" source="jsx3.gui.Block"/>
  <method id="method:getFontSize" idfk="method:getFontSize" inherited="1" name="getFontSize" source="jsx3.gui.Block"/>
  <method id="method:getFontWeight" idfk="method:getFontWeight" inherited="1" name="getFontWeight" source="jsx3.gui.Block"/>
  <method id="method:getHeight" idfk="method:getHeight" inherited="1" name="getHeight" source="jsx3.gui.Block"/>
  <method id="method:getIndex" idfk="method:getIndex" inherited="1" name="getIndex" source="jsx3.gui.Block"/>
  <method id="method:getLeft" idfk="method:getLeft" inherited="1" name="getLeft" source="jsx3.gui.Block"/>
  <method id="method:getMargin" idfk="method:getMargin" inherited="1" name="getMargin" source="jsx3.gui.Block"/>
  <method id="method:getOverflow" idfk="method:getOverflow" inherited="1" name="getOverflow" source="jsx3.gui.Block"/>
  <method id="method:getPadding" idfk="method:getPadding" inherited="1" name="getPadding" source="jsx3.gui.Block"/>
  <method id="method:getRelativePosition" idfk="method:getRelativePosition" inherited="1" name="getRelativePosition" source="jsx3.gui.Block"/>
  <method id="method:getTagName" idfk="method:getTagName" inherited="1" name="getTagName" source="jsx3.gui.Block"/>
  <method id="method:getText" idfk="method:getText" inherited="1" name="getText" source="jsx3.gui.Block"/>
  <method id="method:getTextAlign" idfk="method:getTextAlign" inherited="1" name="getTextAlign" source="jsx3.gui.Block"/>
  <method id="method:getTip" idfk="method:getTip" inherited="1" name="getTip" source="jsx3.gui.Block"/>
  <method id="method:getTop" idfk="method:getTop" inherited="1" name="getTop" source="jsx3.gui.Block"/>
  <method id="method:getVisibility" idfk="method:getVisibility" inherited="1" name="getVisibility" source="jsx3.gui.Block"/>
  <method id="method:getWidth" idfk="method:getWidth" inherited="1" name="getWidth" source="jsx3.gui.Block"/>
  <method id="method:getZIndex" idfk="method:getZIndex" inherited="1" name="getZIndex" source="jsx3.gui.Block"/>
  <method id="method:hideMask" idfk="method:hideMask" inherited="1" name="hideMask" source="jsx3.gui.Block"/>
  <method id="method:setBackground" idfk="method:setBackground" inherited="1" name="setBackground" source="jsx3.gui.Block"/>
  <method id="method:setBackgroundColor" idfk="method:setBackgroundColor" inherited="1" name="setBackgroundColor" source="jsx3.gui.Block"/>
  <method id="method:setBorder" idfk="method:setBorder" inherited="1" name="setBorder" source="jsx3.gui.Block"/>
  <method id="method:setCDFAttribute" idfk="method:setCDFAttribute" inherited="1" name="setCDFAttribute" source="jsx3.gui.Block"/>
  <method id="method:setCDFId" idfk="method:setCDFId" inherited="1" name="setCDFId" source="jsx3.gui.Block"/>
  <method id="method:setCSSOverride" idfk="method:setCSSOverride" inherited="1" name="setCSSOverride" source="jsx3.gui.Block"/>
  <method id="method:setClassName" idfk="method:setClassName" inherited="1" name="setClassName" source="jsx3.gui.Block"/>
  <method id="method:setColor" idfk="method:setColor" inherited="1" name="setColor" source="jsx3.gui.Block"/>
  <method id="method:setCursor" idfk="method:setCursor" inherited="1" name="setCursor" source="jsx3.gui.Block"/>
  <method id="method:setDimensions" idfk="method:setDimensions" inherited="1" name="setDimensions" source="jsx3.gui.Block"/>
  <method id="method:setDisplay" idfk="method:setDisplay" inherited="1" name="setDisplay" source="jsx3.gui.Block"/>
  <method id="method:setFontName" idfk="method:setFontName" inherited="1" name="setFontName" source="jsx3.gui.Block"/>
  <method id="method:setFontSize" idfk="method:setFontSize" inherited="1" name="setFontSize" source="jsx3.gui.Block"/>
  <method id="method:setFontWeight" idfk="method:setFontWeight" inherited="1" name="setFontWeight" source="jsx3.gui.Block"/>
  <method id="method:setHeight" idfk="method:setHeight" inherited="1" name="setHeight" source="jsx3.gui.Block"/>
  <method id="method:setIndex" idfk="method:setIndex" inherited="1" name="setIndex" source="jsx3.gui.Block"/>
  <method id="method:setLeft" idfk="method:setLeft" inherited="1" name="setLeft" source="jsx3.gui.Block"/>
  <method id="method:setMargin" idfk="method:setMargin" inherited="1" name="setMargin" source="jsx3.gui.Block"/>
  <method id="method:setOverflow" idfk="method:setOverflow" inherited="1" name="setOverflow" source="jsx3.gui.Block"/>
  <method id="method:setPadding" idfk="method:setPadding" inherited="1" name="setPadding" source="jsx3.gui.Block"/>
  <method id="method:setRelativePosition" idfk="method:setRelativePosition" inherited="1" name="setRelativePosition" source="jsx3.gui.Block"/>
  <method id="method:setTagName" idfk="method:setTagName" inherited="1" name="setTagName" source="jsx3.gui.Block"/>
  <method id="method:setText" idfk="method:setText" inherited="1" name="setText" source="jsx3.gui.Block"/>
  <method id="method:setTextAlign" idfk="method:setTextAlign" inherited="1" name="setTextAlign" source="jsx3.gui.Block"/>
  <method id="method:setTip" idfk="method:setTip" inherited="1" name="setTip" source="jsx3.gui.Block"/>
  <method id="method:setTop" idfk="method:setTop" inherited="1" name="setTop" source="jsx3.gui.Block"/>
  <method id="method:setVisibility" idfk="method:setVisibility" inherited="1" name="setVisibility" source="jsx3.gui.Block"/>
  <method id="method:setWidth" idfk="method:setWidth" inherited="1" name="setWidth" source="jsx3.gui.Block"/>
  <method id="method:setZIndex" idfk="method:setZIndex" inherited="1" name="setZIndex" source="jsx3.gui.Block"/>
  <method id="method:showMask" idfk="method:showMask" inherited="1" name="showMask" source="jsx3.gui.Block"/>
  <method id="method:doEvent" idfk="method:doEvent" inherited="1" name="doEvent" source="jsx3.gui.Interactive"/>
  <method id="method:getCanDrag" idfk="method:getCanDrag" inherited="1" name="getCanDrag" source="jsx3.gui.Interactive"/>
  <method id="method:getCanDrop" idfk="method:getCanDrop" inherited="1" name="getCanDrop" source="jsx3.gui.Interactive"/>
  <method id="method:getCanMove" idfk="method:getCanMove" inherited="1" name="getCanMove" source="jsx3.gui.Interactive"/>
  <method id="method:getCanSpy" idfk="method:getCanSpy" inherited="1" name="getCanSpy" source="jsx3.gui.Interactive"/>
  <method id="method:getEvent" idfk="method:getEvent" inherited="1" name="getEvent" source="jsx3.gui.Interactive"/>
  <method id="method:getEvents" idfk="method:getEvents" inherited="1" name="getEvents" source="jsx3.gui.Interactive"/>
  <method id="method:getMenu" idfk="method:getMenu" inherited="1" name="getMenu" source="jsx3.gui.Interactive"/>
  <method id="method:hasEvent" idfk="method:hasEvent" inherited="1" name="hasEvent" source="jsx3.gui.Interactive"/>
  <method id="method:registerHotKey" idfk="method:registerHotKey" inherited="1" name="registerHotKey" source="jsx3.gui.Interactive"/>
  <method id="method:removeEvent" idfk="method:removeEvent" inherited="1" name="removeEvent" source="jsx3.gui.Interactive"/>
  <method id="method:removeEvents" idfk="method:removeEvents" inherited="1" name="removeEvents" source="jsx3.gui.Interactive"/>
  <method id="method:setCanDrag" idfk="method:setCanDrag" inherited="1" name="setCanDrag" source="jsx3.gui.Interactive"/>
  <method id="method:setCanDrop" idfk="method:setCanDrop" inherited="1" name="setCanDrop" source="jsx3.gui.Interactive"/>
  <method id="method:setCanMove" idfk="method:setCanMove" inherited="1" name="setCanMove" source="jsx3.gui.Interactive"/>
  <method id="method:setCanSpy" idfk="method:setCanSpy" inherited="1" name="setCanSpy" source="jsx3.gui.Interactive"/>
  <method id="method:setEvent" idfk="method:setEvent" inherited="1" name="setEvent" source="jsx3.gui.Interactive"/>
  <method id="method:setMenu" idfk="method:setMenu" inherited="1" name="setMenu" source="jsx3.gui.Interactive"/>
  <method id="method:setSpyStyles" idfk="method:setSpyStyles" inherited="1" name="setSpyStyles" source="jsx3.gui.Interactive"/>
  <method id="method:showSpy" idfk="method:showSpy" inherited="1" name="showSpy" source="jsx3.gui.Interactive"/>
  <method id="method:focus" idfk="method:focus" inherited="1" name="focus" source="jsx3.gui.Painted"/>
  <method id="method:getAbsolutePosition" idfk="method:getAbsolutePosition" inherited="1" name="getAbsolutePosition" source="jsx3.gui.Painted"/>
  <method id="method:getAttribute" idfk="method:getAttribute" inherited="1" name="getAttribute" source="jsx3.gui.Painted"/>
  <method id="method:getAttributes" idfk="method:getAttributes" inherited="1" name="getAttributes" source="jsx3.gui.Painted"/>
  <method id="method:getDynamicProperty" idfk="method:getDynamicProperty" inherited="1" name="getDynamicProperty" source="jsx3.gui.Painted"/>
  <method id="method:getRendered" idfk="method:getRendered" inherited="1" name="getRendered" source="jsx3.gui.Painted"/>
  <method deprecated="1" id="method:insertHTML" idfk="method:insertHTML" inherited="1" name="insertHTML" source="jsx3.gui.Painted"/>
  <method id="method:onAfterPaint" idfk="method:onAfterPaint" inherited="1" name="onAfterPaint" source="jsx3.gui.Painted"/>
  <method id="method:onAfterRestoreView" idfk="method:onAfterRestoreView" inherited="1" name="onAfterRestoreView" source="jsx3.gui.Painted"/>
  <method id="method:paintChild" idfk="method:paintChild" inherited="1" name="paintChild" source="jsx3.gui.Painted"/>
  <method id="method:paintChildren" idfk="method:paintChildren" inherited="1" name="paintChildren" source="jsx3.gui.Painted"/>
  <method id="method:recalcBox" idfk="method:recalcBox" inherited="1" name="recalcBox" source="jsx3.gui.Painted"/>
  <method id="method:removeAttribute" idfk="method:removeAttribute" inherited="1" name="removeAttribute" source="jsx3.gui.Painted"/>
  <method id="method:removeAttributes" idfk="method:removeAttributes" inherited="1" name="removeAttributes" source="jsx3.gui.Painted"/>
  <method id="method:repaint" idfk="method:repaint" inherited="1" name="repaint" source="jsx3.gui.Painted"/>
  <method id="method:setAttribute" idfk="method:setAttribute" inherited="1" name="setAttribute" source="jsx3.gui.Painted"/>
  <method id="method:setDynamicProperty" idfk="method:setDynamicProperty" inherited="1" name="setDynamicProperty" source="jsx3.gui.Painted"/>
  <method id="method:adoptChild" idfk="method:adoptChild" inherited="1" name="adoptChild" source="jsx3.app.Model"/>
  <method id="method:doClone" idfk="method:doClone" inherited="1" name="doClone" source="jsx3.app.Model"/>
  <method id="method:findAncestor" idfk="method:findAncestor" inherited="1" name="findAncestor" source="jsx3.app.Model"/>
  <method id="method:findDescendants" idfk="method:findDescendants" inherited="1" name="findDescendants" source="jsx3.app.Model"/>
  <method id="method:getAncestorOfName" idfk="method:getAncestorOfName" inherited="1" name="getAncestorOfName" source="jsx3.app.Model"/>
  <method id="method:getAncestorOfType" idfk="method:getAncestorOfType" inherited="1" name="getAncestorOfType" source="jsx3.app.Model"/>
  <method id="method:getChild" idfk="method:getChild" inherited="1" name="getChild" source="jsx3.app.Model"/>
  <method id="method:getChildIndex" idfk="method:getChildIndex" inherited="1" name="getChildIndex" source="jsx3.app.Model"/>
  <method id="method:getChildren" idfk="method:getChildren" inherited="1" name="getChildren" source="jsx3.app.Model"/>
  <method id="method:getDescendantOfName" idfk="method:getDescendantOfName" inherited="1" name="getDescendantOfName" source="jsx3.app.Model"/>
  <method id="method:getDescendantsOfType" idfk="method:getDescendantsOfType" inherited="1" name="getDescendantsOfType" source="jsx3.app.Model"/>
  <method id="method:getFirstChild" idfk="method:getFirstChild" inherited="1" name="getFirstChild" source="jsx3.app.Model"/>
  <method id="method:getFirstChildOfType" idfk="method:getFirstChildOfType" inherited="1" name="getFirstChildOfType" source="jsx3.app.Model"/>
  <method id="method:getHelpId" idfk="method:getHelpId" inherited="1" name="getHelpId" source="jsx3.app.Model"/>
  <method id="method:getId" idfk="method:getId" inherited="1" name="getId" source="jsx3.app.Model"/>
  <method id="method:getLastChild" idfk="method:getLastChild" inherited="1" name="getLastChild" source="jsx3.app.Model"/>
  <method id="method:getLoadType" idfk="method:getLoadType" inherited="1" name="getLoadType" source="jsx3.app.Model"/>
  <method id="method:getMetaValue" idfk="method:getMetaValue" inherited="1" name="getMetaValue" source="jsx3.app.Model"/>
  <method id="method:getNS" idfk="method:getNS" inherited="1" name="getNS" source="jsx3.app.Model"/>
  <method id="method:getName" idfk="method:getName" inherited="1" name="getName" source="jsx3.app.Model"/>
  <method id="method:getNextSibling" idfk="method:getNextSibling" inherited="1" name="getNextSibling" source="jsx3.app.Model"/>
  <method final="1" id="method:getParent" idfk="method:getParent" inherited="1" name="getParent" source="jsx3.app.Model"/>
  <method id="method:getPersistence" idfk="method:getPersistence" inherited="1" name="getPersistence" source="jsx3.app.Model"/>
  <method id="method:getPreviousSibling" idfk="method:getPreviousSibling" inherited="1" name="getPreviousSibling" source="jsx3.app.Model"/>
  <method id="method:getServer" idfk="method:getServer" inherited="1" name="getServer" source="jsx3.app.Model"/>
  <method id="method:getUriResolver" idfk="method:getUriResolver" inherited="1" name="getUriResolver" source="jsx3.app.Model"/>
  <method id="method:insertBefore" idfk="method:insertBefore" inherited="1" name="insertBefore" source="jsx3.app.Model"/>
  <method id="method:load" idfk="method:load" inherited="1" name="load" source="jsx3.app.Model"/>
  <method id="method:loadAndCache" idfk="method:loadAndCache" inherited="1" name="loadAndCache" source="jsx3.app.Model"/>
  <method id="method:loadXML" idfk="method:loadXML" inherited="1" name="loadXML" source="jsx3.app.Model"/>
  <method id="method:onAfterAssemble" idfk="method:onAfterAssemble" inherited="1" name="onAfterAssemble" source="jsx3.app.Model"/>
  <method id="method:onAfterAttach" idfk="method:onAfterAttach" inherited="1" name="onAfterAttach" source="jsx3.app.Model"/>
  <method id="method:onBeforeAssemble" idfk="method:onBeforeAssemble" inherited="1" name="onBeforeAssemble" source="jsx3.app.Model"/>
  <method id="method:onChangeServer" idfk="method:onChangeServer" inherited="1" name="onChangeServer" source="jsx3.app.Model"/>
  <method id="method:onChildAdded" idfk="method:onChildAdded" inherited="1" name="onChildAdded" source="jsx3.app.Model"/>
  <method id="method:onDestroy" idfk="method:onDestroy" inherited="1" name="onDestroy" source="jsx3.app.Model"/>
  <method id="method:onRemoveChild" idfk="method:onRemoveChild" inherited="1" name="onRemoveChild" source="jsx3.app.Model"/>
  <method id="method:onSetChild" idfk="method:onSetChild" inherited="1" name="onSetChild" source="jsx3.app.Model"/>
  <method id="method:onSetParent" idfk="method:onSetParent" inherited="1" name="onSetParent" source="jsx3.app.Model"/>
  <method id="method:removeChild" idfk="method:removeChild" inherited="1" name="removeChild" source="jsx3.app.Model"/>
  <method id="method:removeChildren" idfk="method:removeChildren" inherited="1" name="removeChildren" source="jsx3.app.Model"/>
  <method id="method:selectDescendants" idfk="method:selectDescendants" inherited="1" name="selectDescendants" source="jsx3.app.Model"/>
  <method id="method:setChild" idfk="method:setChild" inherited="1" name="setChild" source="jsx3.app.Model"/>
  <method id="method:setHelpId" idfk="method:setHelpId" inherited="1" name="setHelpId" source="jsx3.app.Model"/>
  <method id="method:setLoadType" idfk="method:setLoadType" inherited="1" name="setLoadType" source="jsx3.app.Model"/>
  <method id="method:setMetaValue" idfk="method:setMetaValue" inherited="1" name="setMetaValue" source="jsx3.app.Model"/>
  <method id="method:setName" idfk="method:setName" inherited="1" name="setName" source="jsx3.app.Model"/>
  <method id="method:setPersistence" idfk="method:setPersistence" inherited="1" name="setPersistence" source="jsx3.app.Model"/>
  <method id="method:toString" idfk="method:toString" inherited="1" name="toString" source="jsx3.app.Model"/>
  <method id="method:toXML" idfk="method:toXML" inherited="1" name="toXML" source="jsx3.app.Model"/>
  <method id="method:toXMLDoc" idfk="method:toXMLDoc" inherited="1" name="toXMLDoc" source="jsx3.app.Model"/>
  <method id="method:publish" idfk="method:publish" inherited="1" name="publish" source="jsx3.util.EventDispatcher"/>
  <method id="method:subscribe" idfk="method:subscribe" inherited="1" name="subscribe" source="jsx3.util.EventDispatcher"/>
  <method id="method:unsubscribe" idfk="method:unsubscribe" inherited="1" name="unsubscribe" source="jsx3.util.EventDispatcher"/>
  <method id="method:unsubscribeAll" idfk="method:unsubscribeAll" inherited="1" name="unsubscribeAll" source="jsx3.util.EventDispatcher"/>
  <method id="method:clone" idfk="method:clone" inherited="1" name="clone" source="jsx3.lang.Object"/>
  <method id="method:equals" idfk="method:equals" inherited="1" name="equals" source="jsx3.lang.Object"/>
  <method id="method:eval" idfk="method:eval" inherited="1" name="eval" source="jsx3.lang.Object"/>
  <method id="method:getClass" idfk="method:getClass" inherited="1" name="getClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOf" idfk="method:getInstanceOf" inherited="1" name="getInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfClass" idfk="method:getInstanceOfClass" inherited="1" name="getInstanceOfClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfPackage" idfk="method:getInstanceOfPackage" inherited="1" name="getInstanceOfPackage" source="jsx3.lang.Object"/>
  <method id="method:instanceOf" idfk="method:instanceOf" inherited="1" name="instanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isInstanceOf" idfk="method:isInstanceOf" inherited="1" name="isInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isSubclassOf" idfk="method:isSubclassOf" inherited="1" name="isSubclassOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:jsxmix" idfk="method:jsxmix" inherited="1" name="jsxmix" source="jsx3.lang.Object"/>
  <method id="method:jsxsuper" idfk="method:jsxsuper" inherited="1" name="jsxsuper" source="jsx3.lang.Object"/>
  <method id="method:jsxsupermix" idfk="method:jsxsupermix" inherited="1" name="jsxsupermix" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:setInstanceOf" idfk="method:setInstanceOf" inherited="1" name="setInstanceOf" source="jsx3.lang.Object"/>
</class>
