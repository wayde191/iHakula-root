<?xml version="1.0" encoding="UTF-8"?>
<class access="public" deprecated="1" id="class:jsx3.gui.List" name="jsx3.gui.List" package="jsx3.gui" shortname="List">
  <text>The jsx3.gui.List class supports sorting, resizing, reordering, selection, discontinuous selection, key and mouse navigation, etc. Its data is accessed via the CDF interface.</text>
  <deprecated>Use &lt;code&gt;jsx3.gui.Matrix&lt;/code&gt; instead.</deprecated>
  <see source="jsx3.gui.Matrix">jsx3.gui.Matrix</see>
  <superclass id="super:0" loaded="1" name="Object"/>
  <superclass id="super:1" loaded="1" name="jsx3.lang.Object"/>
  <superclass id="super:2" loaded="1" name="jsx3.app.Model"/>
  <superclass id="super:3" loaded="1" name="jsx3.gui.Painted"/>
  <superclass direct="1" id="super:4" loaded="1" name="jsx3.gui.Block"/>
  <implements direct="1" id="implements:0" loaded="1" name="jsx3.gui.Form"/>
  <implements id="implements:1" loaded="1" name="jsx3.gui.Interactive"/>
  <implements id="implements:2" loaded="1" name="jsx3.util.EventDispatcher"/>
  <implements direct="1" id="implements:3" loaded="1" name="jsx3.xml.CDF"/>
  <implements direct="1" id="implements:4" loaded="1" name="jsx3.xml.Cacheable"/>
  <subclass id="sub:0" loaded="1" name="jsx3.gui.Grid"/>
  <field access="public" class="jsx3.gui.List" deprecated="1" fullname="jsx3.gui.List.DEFAULTXSLURL" id="sfield:DEFAULTXSLURL" name="DEFAULTXSLURL" static="1">
    <type link="1" name="String"/>
    <text> JSX/xsl/[?fx]/jsx30list.xsl (default)</text>
  </field>
  <field access="public" class="jsx3.gui.List" fullname="jsx3.gui.List.SELECTBGIMAGE" id="sfield:SELECTBGIMAGE" name="SELECTBGIMAGE" static="1">
    <type link="1" name="String"/>
    <text> url(JSX/images/list/select.gif)
   </text>
  </field>
  <field access="public" class="jsx3.gui.List" fullname="jsx3.gui.List.DEFAULTBACKGROUNDHEAD" id="sfield:DEFAULTBACKGROUNDHEAD" name="DEFAULTBACKGROUNDHEAD" static="1">
    <type link="1" name="String"/>
    <text> background-image:url(JSX/images/list/header.gif);
   </text>
  </field>
  <field access="public" class="jsx3.gui.List" fullname="jsx3.gui.List.DEFAULTBACKGROUNDCOLOR" id="sfield:DEFAULTBACKGROUNDCOLOR" name="DEFAULTBACKGROUNDCOLOR" static="1" value="&quot;#F3F2F4&quot;">
    <type link="1" name="String"/>
    <text> #F3F2F4
   </text>
  </field>
  <field access="public" class="jsx3.gui.List" fullname="jsx3.gui.List.DEFAULTBACKGROUNDCOLORHEAD" id="sfield:DEFAULTBACKGROUNDCOLORHEAD" name="DEFAULTBACKGROUNDCOLORHEAD" static="1" value="&quot;#c8cfd8&quot;">
    <type link="1" name="String"/>
    <text> #c8cfd8
   </text>
  </field>
  <field access="public" class="jsx3.gui.List" final="1" fullname="jsx3.gui.List.SORTASCENDING" id="sfield:SORTASCENDING" name="SORTASCENDING" static="1" value="&quot;ascending&quot;">
    <type link="1" name="String"/>
    <text> ascending</text>
  </field>
  <field access="public" class="jsx3.gui.List" final="1" fullname="jsx3.gui.List.SORTDESCENDING" id="sfield:SORTDESCENDING" name="SORTDESCENDING" static="1" value="&quot;descending&quot;">
    <type link="1" name="String"/>
    <text> descending</text>
  </field>
  <field access="public" class="jsx3.gui.List" fullname="jsx3.gui.List.DEFAULTHEADERHEIGHT" id="sfield:DEFAULTHEADERHEIGHT" name="DEFAULTHEADERHEIGHT" static="1" value="20">
    <type class="Number" link="1" name="int"/>
    <text> 20
   </text>
  </field>
  <field access="public" class="jsx3.gui.List" final="1" fullname="jsx3.gui.List.MULTI" id="sfield:MULTI" name="MULTI" static="1" value="1">
    <type class="Number" link="1" name="int"/>
    <text> 1</text>
  </field>
  <field access="public" class="jsx3.gui.List" final="1" fullname="jsx3.gui.List.SINGLE" id="sfield:SINGLE" name="SINGLE" static="1" value="0">
    <type class="Number" link="1" name="int"/>
    <text> 0</text>
  </field>
  <field access="public" class="jsx3.gui.List" final="1" fullname="jsx3.gui.List.NOTSELECTABLE" id="sfield:NOTSELECTABLE" name="NOTSELECTABLE" static="1" value="2">
    <type class="Number" link="1" name="int"/>
    <text> 2</text>
  </field>
  <field access="public" class="jsx3.gui.List" fullname="jsx3.gui.List.RESIZEBARBGCOLOR" id="sfield:RESIZEBARBGCOLOR" name="RESIZEBARBGCOLOR" static="1" value="&quot;#2050df&quot;">
    <type link="1" name="String"/>
    <text> #2050df
   </text>
  </field>
  <field access="public" class="jsx3.gui.List" fullname="jsx3.gui.List.DEFAULTROWCLASS" id="sfield:DEFAULTROWCLASS" name="DEFAULTROWCLASS" static="1" value="&quot;jsx30list_r1&quot;">
    <type link="1" name="String"/>
    <text> jsx30list_r1
   </text>
  </field>
  <constructor access="public" id="method:init" name="init">
    <param name="strName" text="unique name distinguishing this object from all other JSX GUI objects in the JSX application&#10;   ">
      <type link="1" name="String"/>
    </param>
    <text>instance initializer</text>
  </constructor>
  <method access="public" id="method:getXSL" name="getXSL">
    <return text="jsx3.xml.Document instance containing valid XSL stylesheet&#10;   ">
      <type link="1" name="jsx3.xml.Document"/>
    </return>
    <text>Returns xslt for the List, prioritizing the acquisition in the following order: 1) check cache; 2) check jsxxsl; 3) check jsxxslurl; 4) use default</text>
    <overridesmix id="overrides:getXSL" idfk="method:getXSL" name="getXSL" source="jsx3.xml.Cacheable"/>
  </method>
  <method access="public" deprecated="1" id="method:clearXSL" name="clearXSL">
    <return text="this object">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>List instances typically start with a baseline, system XSL file which is then extended at run-time to include the output markup specific to the child columns;
         calling this method will remove the document from the cache, effectively causing the template to reset; returns ref to self</text>
    <deprecated>use &lt;code&gt;resetXslCacheData()&lt;/code&gt; instead.</deprecated>
    <see idfk="method:resetXslCacheData" source="jsx3.xml.Cacheable">jsx3.xml.Cacheable.resetXslCacheData()</see>
  </method>
  <method access="public" id="method:doValidate" name="doValidate">
    <return text="one of: jsx3.gui.Form.STATEINVALID or jsx3.gui.Form.STATEVALID&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>validates the list; if the list is set to 'required', a selection must be made to pass validation. Otherwise, a list will always pass validation</text>
    <overridesmix id="overrides:doValidate" idfk="method:doValidate" name="doValidate" source="jsx3.gui.Form"/>
  </method>
  <method access="public" id="method:getResizable" name="getResizable">
    <return text="&lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt;&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns whether columns in this list can be resized. The default value is <code>jsx3.Boolean.TRUE</code>.</text>
  </method>
  <method access="public" id="method:setResizable" name="setResizable">
    <param name="BOOLEAN" text="&lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt;">
      <type class="Number" link="1" name="int"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets whether columns in this list can be resized.</text>
  </method>
  <method access="public" id="method:setSortColumn" name="setSortColumn">
    <param name="intColumnIndex" text="zero-based index of child column">
      <type class="Number" link="1" name="int"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets the zero-based index of column to sort on and executes the sort. This method fires the
<code>AFTER_SORT</code> only under the deprecated 3.0 model event protocol.</text>
  </method>
  <method access="public" id="method:getSortColumn" name="getSortColumn">
    <return text="zero-based index of child column&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns the zero-based index of column to sort on.</text>
  </method>
  <method access="public" id="method:doSort" name="doSort">
    <param name="intSortDir" text="&lt;code&gt;SORTASCENDING&lt;/code&gt; or &lt;code&gt;SORTDESCENDING&lt;/code&gt;.">
      <type link="1" name="String"/>
    </param>
    <text>Sorts this list according to the current sort path. If no sort direction is specified, the value will be toggled.</text>
    <see idfk="sfield:SORTASCENDING" source="jsx3.gui.List">SORTASCENDING</see>
    <see idfk="sfield:SORTDESCENDING" source="jsx3.gui.List">SORTDESCENDING</see>
  </method>
  <method access="public" id="method:getSortPath" name="getSortPath">
    <return text="selection path (xpath / xsl query)&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the selection path for XSLT to use when sorting output.  Typically this is simply the name of the attribute preceded by '@' (i.e., @jsxtext, @social, @phone, etc); if no value exists (e.g., null), an empty string is returned</text>
  </method>
  <method access="public" id="method:setSortPath" name="setSortPath">
    <param name="strPath" text="selection path (xpath / xsl query)">
      <type link="1" name="String"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets the index for the column that the data will be sorted on;
           returns a ref to self;</text>
  </method>
  <method access="public" id="method:getSortDirection" name="getSortDirection">
    <return text="one of: jsx3.gui.List.SORTASCENDING or jsx3.gui.List.SORTDESCENDING&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the direction (jsx3.gui.List.SORTASCENDING or jsx3.gui.List.SORTDESCENDING) for the sorted column; if no direction specified, ascending is returned</text>
  </method>
  <method access="public" id="method:setSortDirection" name="setSortDirection">
    <param name="intSortDir" text="one of: jsx3.gui.List.SORTASCENDING or jsx3.gui.List.SORTDESCENDING">
      <type link="1" name="String"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets the direction (ascending or descending) for the sorted column.</text>
  </method>
  <method access="public" id="method:getMultiSelect" name="getMultiSelect">
    <return text="&lt;code&gt;MULTI&lt;/code&gt;, &lt;code&gt;SINGLE&lt;/code&gt;, or &lt;code&gt;NOTSELECTABLE&lt;/code&gt;.&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns the selection type of this list.</text>
  </method>
  <method access="public" id="method:setMultiSelect" name="setMultiSelect">
    <param name="intMulti" text="&lt;code&gt;MULTI&lt;/code&gt;, &lt;code&gt;SINGLE&lt;/code&gt;, or &lt;code&gt;NOTSELECTABLE&lt;/code&gt;.">
      <type class="Number" link="1" name="int"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets the selection type of this list.</text>
  </method>
  <method access="public" id="method:getCanReorder" name="getCanReorder">
    <return text="one of: jsx3.Boolean.TRUE or jsx3.Boolean.FALSE&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns whether the columns in the list can be re-ordered via user interaction. The default value is
<code>jsx3.Boolean.TRUE</code>.</text>
  </method>
  <method access="public" id="method:setCanReorder" name="setCanReorder">
    <param name="intReorder" text="one of: jsx3.Boolean.TRUE or jsx3.Boolean.FALSE">
      <type class="Number" link="1" name="int"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets whether the columns in the list can be re-ordered via user interaction with the VIEW</text>
  </method>
  <method access="public" id="method:getCanSort" name="getCanSort">
    <return text="one of: jsx3.Boolean.TRUE or jsx3.Boolean.FALSE&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns whether the list will render with sortable columns.</text>
  </method>
  <method access="public" id="method:setCanSort" name="setCanSort">
    <param name="SORT" text="one of: jsx3.Boolean.TRUE or jsx3.Boolean.FALSE">
      <type class="Number" link="1" name="int"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets whether the list will render with sortable columns.</text>
  </method>
  <method access="public" id="method:getBackgroundColorHead" name="getBackgroundColorHead">
    <return text="CSS color&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS color for the header row (for example, "#ffffff"). If this value is not set (<code>null</code>)
the list will render with the default value of <code>jsx3.gui.List.DEFAULTBACKGROUNDCOLORHEAD</code>.</text>
  </method>
  <method access="public" id="method:setBackgroundColorHead" name="setBackgroundColorHead">
    <param name="strBGColor" text="CSS color property">
      <type link="1" name="String"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets the CSS color for the header row (for example, #ffffff)</text>
  </method>
  <method access="public" id="method:getBackgroundHead" name="getBackgroundHead">
    <return text="CSS background property&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the CSS background property for the header row (for example, "background-image:url(abc.gif)").
If this value is not set (<code>null</code>) the list will render with the default value of
<code>jsx3.gui.List.DEFAULTBACKGROUNDHEAD</code>.</text>
  </method>
  <method access="public" id="method:setBackgroundHead" name="setBackgroundHead">
    <param name="strBG" text="CSS background property">
      <type link="1" name="String"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets the CSS background property (can be a composite of varoius CSS-related bg properties)</text>
  </method>
  <method access="public" id="method:getHeaderHeight" name="getHeaderHeight">
    <return text="">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns the height of the header row in pixels. If this value is not set (<code>null</code>) the list will render with
the default value of <code>jsx3.gui.List.DEFAULTHEADERHEIGHT</code>.</text>
  </method>
  <method access="public" id="method:setHeaderHeight" name="setHeaderHeight">
    <param name="intHeight" text="">
      <type class="Number" link="1" name="int"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets the height of the header row in pixels. Set to zero (0) to hide the header row and only render the body
rows for the list.</text>
  </method>
  <method access="public" id="method:executeRecord" name="executeRecord">
    <param name="strRecordId" text="the jsxid of the CDF record to execute.&#10;   ">
      <type link="1" name="String"/>
    </param>
    <text>Evaluates the JavaScript code in the <code>jsxexecute</code> attribute of one CDF record of this list.</text>
  </method>
  <method access="public" deprecated="1" id="method:doExecute" name="doExecute">
    <param name="strRecordId" text="'jsxid' value for the record node (according to the CDF) to execute">
      <type link="1" name="String"/>
    </param>
    <text>Executes any bound code for a record of this list specified by the <code>strRecordId</code> parameter. If this
parameter is omitted the code of any currently selected records is executed. Invokes the <code>EXECUTE</code>
model event only under the deprecated 3.0 model event protocol.</text>
    <deprecated>use &lt;code&gt;executeRecord()&lt;/code&gt; instead.</deprecated>
    <see idfk="method:executeRecord" source="jsx3.gui.List">executeRecord()</see>
  </method>
  <method access="public" id="method:isSelected" name="isSelected">
    <param name="strRecordId" text="jsxid property for the record to check selection state for">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type class="Boolean" link="1" name="boolean"/>
    </return>
    <text>Returns whether or not the given record is selected (true/false)</text>
  </method>
  <method access="public" deprecated="1" id="method:doSelect" name="doSelect">
    <param name="strRecordId" text="'jsxid' value for the record node (according to the CDF) to select in the DATA MODEL">
      <type link="1" name="String"/>
    </param>
    <param name="bVIEW" text="true if null; if true, the selection state in the VIEW will be updated to reflect the selection within the MODEL">
      <type class="Boolean" link="1" name="boolean"/>
    </param>
    <param name="bNoEvent" text="if true, then don't invoke a selection event">
      <type class="Boolean" link="1" name="boolean"/>
    </param>
    <param name="bReveal"/>
    <return text="this object">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Selects a given record for the list. Invokes the <code>SELECT</code> and <code>CHANGE</code> model events only
under the deprecated 3.0 model event protocol.</text>
    <deprecated>use &lt;code&gt;setValue()&lt;/code&gt; or &lt;code&gt;selectRecord()&lt;/code&gt; instead.</deprecated>
    <see idfk="method:setValue" source="jsx3.gui.List">setValue()</see>
    <see idfk="method:selectRecord" source="jsx3.gui.List">selectRecord()</see>
  </method>
  <method access="public" id="method:selectRecord" name="selectRecord">
    <param name="strRecordId" text="the jsxid of the record to select.">
      <type link="1" name="String"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Selects a CDF record of this list. The item will be highlighted in the view and the CDF data will be updated
accordingly. If this list is a multi-select list then this selection will be added to any previous selection.</text>
  </method>
  <method access="public" id="method:deselectRecord" name="deselectRecord">
    <param name="strRecordId" text="the jsxid of the record to deselect.">
      <type link="1" name="String"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Deselects a CDF record of this list. The item will be un-highlighted in the view and the CDF data will be updated
accordingly.</text>
  </method>
  <method access="public" id="method:deselectAllRecords" name="deselectAllRecords">
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Deselects all selected CDF records of this list.</text>
  </method>
  <method access="public" id="method:focusRecord" name="focusRecord">
    <param name="strRecordId" text="the jsxid value for the record node (according to the CDF) to give focus to.">
      <type link="1" name="String"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Gives cursor focus to a row in the list.</text>
  </method>
  <method access="public" deprecated="1" id="method:doDeselect" name="doDeselect">
    <param name="strRecordId" text="'jsxid' value for the record node (according to the CDF) to select in the DATA MODEL">
      <type link="1" name="String"/>
    </param>
    <param name="bVIEW" text="true if null; if true, the selection state in the VIEW will be updated to reflect the selection within the MODEL">
      <type class="Boolean" link="1" name="boolean"/>
    </param>
    <return text="this object">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Deselects a given record for the list. Invokes the <code>SELECT</code> and <code>CHANGE</code> model events only
under the deprecated 3.0 model event protocol.</text>
    <deprecated>use &lt;code&gt;setValue()&lt;/code&gt; or &lt;code&gt;deselectRecord()&lt;/code&gt; instead.</deprecated>
    <see idfk="method:setValue" source="jsx3.gui.List">setValue()</see>
    <see idfk="method:deselectRecord" source="jsx3.gui.List">deselectRecord()</see>
  </method>
  <method access="public" id="method:getActiveRow" name="getActiveRow">
    <return text="the JavaScript DOM object or &lt;code&gt;null&lt;/code&gt; if no row is active.&#10;   ">
      <type link="1" name="HTMLElement"/>
    </return>
    <text>Returns a handle to the active TR for the list.</text>
  </method>
  <method access="public" id="method:revealRecord" name="revealRecord">
    <param name="strRecordId" text="the id of the record to reveal">
      <type link="1" name="String"/>
    </param>
    <param name="objJSX" text="if provided, reveal the record up to this visual block; useful if the list is set to overflow:expand and the containing block is set to overflow:scroll&#10;   ">
      <type link="1" name="jsx3.gui.Block"/>
    </param>
    <text>Reveals a record by scrolling any ancestor blocks as necessary.</text>
  </method>
  <method access="public" id="method:redrawRecord" name="redrawRecord">
    <param name="strRecordId" text="&lt;code&gt;jsxid&lt;/code&gt; value for the record node (according to the CDF) to redraw">
      <type link="1" name="String"/>
    </param>
    <param name="intAction" text="&lt;code&gt;jsx3.xml.CDF.INSERT&lt;/code&gt;, &lt;code&gt;jsx3.xml.CDF.DELETE&lt;/code&gt;,&#10;   or &lt;code&gt;jsx3.xml.CDF.UPDATE&lt;/code&gt;.&#10;   ">
      <type class="Number" link="1" name="int"/>
    </param>
    <text>List implementation.</text>
    <overridesmix id="overrides:redrawRecord" idfk="method:redrawRecord" name="redrawRecord" source="jsx3.xml.CDF"/>
  </method>
  <method access="public" id="method:getSelectedNodes" name="getSelectedNodes">
    <return text="">
      <type link="1" name="jsx3.util.List">
        <type link="1" name="jsx3.xml.Entity"/>
      </type>
    </return>
    <text>Returns the collection of selected records.</text>
  </method>
  <method access="public" id="method:getSelectedIds" name="getSelectedIds">
    <return text="JavaScript array of stings&#10;   ">
      <type link="1" name="Array">
        <type link="1" name="String"/>
      </type>
    </return>
    <text>Returns the ids of the selected records of this list.</text>
  </method>
  <method access="public" id="method:getValue" name="getValue">
    <return text="">
      <type link="1" name="String"/>
      <type link="1" name="Array">
        <type link="1" name="String"/>
      </type>
    </return>
    <text>Returns the jsxid of the selected record if this list is a single-select list or an array of the the jsxids
of the selected records if this list is a multi-select list.</text>
    <overridesmix id="overrides:getValue" idfk="method:getValue" name="getValue" source="jsx3.gui.Form"/>
  </method>
  <method access="public" id="method:setValue" name="setValue">
    <param name="strRecordId" text="">
      <type link="1" name="String"/>
      <type link="1" name="Array">
        <type link="1" name="String"/>
      </type>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets the selected records for this list. This method clears any current selection state and updates both the
view and the model. The <code>strRecordId</code> parameter should be a single value for a single-select list
or a list of values for a multi-select list.</text>
    <overridesmix id="overrides:setValue" idfk="method:setValue" name="setValue" source="jsx3.gui.Form"/>
  </method>
  <method access="public" id="method:paint" name="paint">
    <return text="DHTML&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the DHTML, used for this object's on-screen VIEW</text>
    <overrides id="overrides:paint" idfk="method:paint" name="paint" source="jsx3.gui.Block"/>
  </method>
  <method access="public" id="method:repaintBody" name="repaintBody">
    <text>Repaints the body portion of the list (the data rows), retaining the scroll position in the list whereas
repainting the entire list would reset scroll position.
   </text>
  </method>
  <method access="public" id="method:repaintHead" name="repaintHead">
    <text>Repaints the head portion of the list (the header row). <p/> Note that this method will not change the rendered
height of the header row. Therefore, after the header height is changed programmatically, <code>repaint()</code>
must be called for the list to render properly.
   </text>
  </method>
  <method access="public" id="smethod:onDelete" name="onDelete" static="1">
    <param name="strId" text="CDF record id (jsxid) for the row to delete.">
      <type link="1" name="String"/>
    </param>
    <param name="objGUI" text="browser element (the hyperlink was clicked) that is contained in the list instance.&#10;   ">
      <type link="1" name="HTMLElement"/>
    </param>
    <text>Static function that can be called from XSLT-generated content in a list cell to delete a row from the CDF of a
list instance.</text>
  </method>
  <method access="public" deprecated="1" id="smethod:onCheck" name="onCheck" static="1">
    <param name="strId" text="CDF record id (jsxid)">
      <type link="1" name="String"/>
    </param>
    <param name="strPropName" text="CDF attribute name for attribute that stores the value of the checkbox">
      <type link="1" name="String"/>
    </param>
    <param name="objGUI" text="browser checkbox element (what was checked)">
      <type link="1" name="HTMLElement"/>
    </param>
    <param name="bToggle" text="if true, the checkbox will be toggled via this function and the result will be persisted. if false, the current state of the checkbox will be persisted.">
      <type class="Boolean" link="1" name="boolean"/>
    </param>
    <param name="objArray" text="2-element JavaScript array. First element contains the value to insert into the CDF for @strPropName if the checkbox is checked. Second element is for unchecked states.">
      <type link="1" name="Object"/>
    </param>
    <text>provides function that can be called from XSLT-generated content in a list cell. Allows update of CDF via persistent mask interface (checkbox)</text>
  </method>
  <method access="public" id="smethod:onRadio" name="onRadio" static="1">
    <param name="strId" text="CDF record id (jsxid)">
      <type link="1" name="String"/>
    </param>
    <param name="strPropName" text="CDF attribute name for attribute that stores the value of the radio button">
      <type link="1" name="String"/>
    </param>
    <param name="objGUI" text="browser radio button element">
      <type link="1" name="HTMLElement"/>
    </param>
    <param name="bSelect" text="if true, the radio button will be forced to a 'selected' state and the result will be persisted. if false, the current state of the radio button will be persisted.">
      <type class="Boolean" link="1" name="boolean"/>
    </param>
    <param name="objArray" text="2-element JavaScript array. First element contains the value to insert into the CDF for @strPropName if the checkbox is checked. Second element is for unchecked states.&#10;   ">
      <type link="1" name="Object"/>
    </param>
    <text>provides function that can be called from XSLT-generated content in a list cell. Allows update of CDF via persistent mask interface (radio button); assumes that the nodes in the CDF document have jsxgroupname attributes to distinguish the radio groups</text>
  </method>
  <method access="public" id="method:appendRow" name="appendRow">
    <param name="objMasterRecord" text="JavaScript object containing at least the field &lt;code&gt;jsxid&lt;/code&gt;.">
      <type link="1" name="Object"/>
    </param>
    <param name="strID" text="if provided this id will be used as the id (jsxid) for &lt;code&gt;objMasterRecord&lt;/code&gt;.&#10;  If &lt;code&gt;null&lt;/code&gt;, a unique, system-generated key will be used.&#10;   ">
      <type link="1" name="String"/>
    </param>
    <text>Appends a new row to the end of the list and adds a corresponding record to the CDF source XML. This method
requires that at least one CDF record already be present to use as a master to clone from if the
<code>objMasterRecord</code> parameter is <code>null</code>.</text>
  </method>
  <method access="public" id="method:updateRow" name="updateRow">
    <param name="strRecordId" text="id for the CDF record whose associated on-screen TR needs to be updated.&#10;   ">
      <type link="1" name="String"/>
    </param>
    <text>Updates the DHTML (VIEW) for an existing row within a list, circumventing a full table repaint by updating
the row directly.</text>
  </method>
  <method access="public" id="method:getGrowBy" name="getGrowBy">
    <return text="&lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.FALSE&lt;/code&gt;&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns whether or not a new row will be appended to the VIEW when a new record is added to the CDF document for the List.  In the case of a grid, a new row is also appended when the last row in the grid gets cursor focus.</text>
  </method>
  <method access="public" id="method:setGrowBy" name="setGrowBy">
    <param name="intGrow" text="&lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.FALSE&lt;/code&gt;">
      <type class="Number" link="1" name="int"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets whether or not a new row will be appended to the VIEW when a new record is added to the CDF document for the List.  In the case of a grid, a new row is also appended when the last row in the grid gets cursor focus.</text>
  </method>
  <method access="public" deprecated="1" id="method:getAutoExpand" name="getAutoExpand">
    <return text="&lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.FALSE&lt;/code&gt;">
      <type class="Number" link="1" name="int"/>
    </return>
    <deprecated>Replaced by &lt;code&gt;getGrowBy&lt;/code&gt; which returns an integer argument rather than a boolean.</deprecated>
    <see idfk="method:getGrowBy" source="jsx3.gui.List">getGrowBy()</see>
  </method>
  <method access="public" deprecated="1" id="method:setAutoExpand" name="setAutoExpand">
    <param name="bExpand" text="&lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.FALSE&lt;/code&gt;.">
      <type class="Number" link="1" name="int"/>
    </param>
    <deprecated>Replaced by &lt;code&gt;setGrowBy&lt;/code&gt; which takes an integer argument rather than a boolean one.</deprecated>
    <see idfk="method:setGrowBy" source="jsx3.gui.List">setGrowBy()</see>
  </method>
  <method access="public" id="method:getSortType" name="getSortType">
    <return text="&lt;code&gt;jsx3.gui.Column.TYPETEXT&lt;/code&gt; or &lt;code&gt;jsx3.gui.Column.TYPENUMBER&lt;/code&gt;&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the data type to be used for sorting this list. This value is either the one explicitly set with
<code>setSortType()</code> or the data type of the current sort.</text>
  </method>
  <method access="public" id="method:setSortType" name="setSortType">
    <param name="strDataType" text="&lt;code&gt;jsx3.gui.Column.TYPETEXT&lt;/code&gt; or &lt;code&gt;jsx3.gui.Column.TYPENUMBER&lt;/code&gt;">
      <type link="1" name="String"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets the data type for the list. This explicit value will override any column data type if set. If it is not set
the data type specific to the sort column is used for sorting.</text>
  </method>
  <method access="public" id="method:getWrap" name="getWrap">
    <return text="&lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.FALSE&lt;/code&gt;&#10;   ">
      <type class="Number" link="1" name="int"/>
    </return>
    <text>Returns whether or not the rows in the grid will support text-wrapping and expand to display their wrapped
content OR be a fixed height. The default value is <code>jsx3.Boolean.TRUE</code>.</text>
  </method>
  <method access="public" id="method:setWrap" name="setWrap">
    <param name="WRAP" text="&lt;code&gt;jsx3.Boolean.TRUE&lt;/code&gt; or &lt;code&gt;jsx3.Boolean.FALSE&lt;/code&gt;">
      <type class="Number" link="1" name="int"/>
    </param>
    <return text="this object&#10;   ">
      <type link="1" name="jsx3.gui.List"/>
    </return>
    <text>Sets whether or not the rows in the grid will support text-wrapping and expand to display their wrapped content
OR be a fixed height.</text>
  </method>
  <method access="public" deprecated="1" id="smethod:getVersion" name="getVersion" static="1">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the release/build for the class (i.e., "2.2.00")</text>
  </method>
  <method access="public" deprecated="1" id="method:getResizeable" name="getResizeable">
    <deprecated>Renamed to getResizable.</deprecated>
    <see idfk="method:getResizable" source="jsx3.gui.List">getResizable()</see>
  </method>
  <method access="public" deprecated="1" id="method:setResizeable" name="setResizeable">
    <deprecated>Renamed to setResizable.</deprecated>
    <see idfk="method:setResizable" source="jsx3.gui.List">setResizable()</see>
  </method>
  <method access="public" deprecated="1" id="method:getCanResize" name="getCanResize">
    <deprecated>Renamed to getResizable.</deprecated>
    <see idfk="method:getResizable" source="jsx3.gui.List">getResizable()</see>
  </method>
  <method access="public" deprecated="1" id="method:setCanResize" name="setCanResize">
    <deprecated>Renamed to setResizable.</deprecated>
    <see idfk="method:setResizable" source="jsx3.gui.List">setResizable()</see>
  </method>
  <method access="public" deprecated="1" id="method:doClearSelections" name="doClearSelections">
    <text>Deselects all selected records of this list. This method updates both the model and the view.</text>
    <deprecated>use setValue() or &lt;code&gt;deselectAllRecords()&lt;/code&gt; instead.</deprecated>
    <see idfk="method:setValue" source="jsx3.gui.List">setValue()</see>
    <see idfk="method:deselectAllRecords" source="jsx3.gui.List">deselectAllRecords()</see>
  </method>
  <method access="public" deprecated="1" id="method:deselectRecords" name="deselectRecords">
    <text>Deselects all selected records of this list. This method updates both the model and the view.</text>
    <deprecated>use setValue() or &lt;code&gt;deselectAllRecords()&lt;/code&gt; instead.</deprecated>
    <see idfk="method:setValue" source="jsx3.gui.List">setValue()</see>
    <see idfk="method:deselectAllRecords" source="jsx3.gui.List">deselectAllRecords()</see>
  </method>
  <method id="method:doKeyBinding" idfk="method:doKeyBinding" inherited="1" name="doKeyBinding" source="jsx3.gui.Form"/>
  <method id="method:doReset" idfk="method:doReset" inherited="1" name="doReset" source="jsx3.gui.Form"/>
  <method id="method:getDisabledBackgroundColor" idfk="method:getDisabledBackgroundColor" inherited="1" name="getDisabledBackgroundColor" source="jsx3.gui.Form"/>
  <method id="method:getDisabledColor" idfk="method:getDisabledColor" inherited="1" name="getDisabledColor" source="jsx3.gui.Form"/>
  <method id="method:getEnabled" idfk="method:getEnabled" inherited="1" name="getEnabled" source="jsx3.gui.Form"/>
  <method id="method:getKeyBinding" idfk="method:getKeyBinding" inherited="1" name="getKeyBinding" source="jsx3.gui.Form"/>
  <method id="method:getRequired" idfk="method:getRequired" inherited="1" name="getRequired" source="jsx3.gui.Form"/>
  <method id="method:getValidationState" idfk="method:getValidationState" inherited="1" name="getValidationState" source="jsx3.gui.Form"/>
  <method id="method:setDisabledBackgroundColor" idfk="method:setDisabledBackgroundColor" inherited="1" name="setDisabledBackgroundColor" source="jsx3.gui.Form"/>
  <method id="method:setDisabledColor" idfk="method:setDisabledColor" inherited="1" name="setDisabledColor" source="jsx3.gui.Form"/>
  <method id="method:setEnabled" idfk="method:setEnabled" inherited="1" name="setEnabled" source="jsx3.gui.Form"/>
  <method id="method:setKeyBinding" idfk="method:setKeyBinding" inherited="1" name="setKeyBinding" source="jsx3.gui.Form"/>
  <method id="method:setRequired" idfk="method:setRequired" inherited="1" name="setRequired" source="jsx3.gui.Form"/>
  <method id="method:setValidationState" idfk="method:setValidationState" inherited="1" name="setValidationState" source="jsx3.gui.Form"/>
  <method id="method:clearXmlData" idfk="method:clearXmlData" inherited="1" name="clearXmlData" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:getNodeSet" idfk="method:getNodeSet" inherited="1" name="getNodeSet" source="jsx3.xml.Cacheable"/>
  <method id="method:getShareResources" idfk="method:getShareResources" inherited="1" name="getShareResources" source="jsx3.xml.Cacheable"/>
  <method id="method:getXML" idfk="method:getXML" inherited="1" name="getXML" source="jsx3.xml.Cacheable"/>
  <method id="method:getXMLId" idfk="method:getXMLId" inherited="1" name="getXMLId" source="jsx3.xml.Cacheable"/>
  <method id="method:getXMLString" idfk="method:getXMLString" inherited="1" name="getXMLString" source="jsx3.xml.Cacheable"/>
  <method id="method:getXMLTransformers" idfk="method:getXMLTransformers" inherited="1" name="getXMLTransformers" source="jsx3.xml.Cacheable"/>
  <method id="method:getXMLURL" idfk="method:getXMLURL" inherited="1" name="getXMLURL" source="jsx3.xml.Cacheable"/>
  <method id="method:getXSLId" idfk="method:getXSLId" inherited="1" name="getXSLId" source="jsx3.xml.Cacheable"/>
  <method id="method:getXSLParams" idfk="method:getXSLParams" inherited="1" name="getXSLParams" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:getXSLString" idfk="method:getXSLString" inherited="1" name="getXSLString" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:getXSLURL" idfk="method:getXSLURL" inherited="1" name="getXSLURL" source="jsx3.xml.Cacheable"/>
  <method id="method:getXmlAsync" idfk="method:getXmlAsync" inherited="1" name="getXmlAsync" source="jsx3.xml.Cacheable"/>
  <method id="method:getXmlBind" idfk="method:getXmlBind" inherited="1" name="getXmlBind" source="jsx3.xml.Cacheable"/>
  <method id="method:onXmlBinding" idfk="method:onXmlBinding" inherited="1" name="onXmlBinding" source="jsx3.xml.Cacheable"/>
  <method id="method:removeXSLParam" idfk="method:removeXSLParam" inherited="1" name="removeXSLParam" source="jsx3.xml.Cacheable"/>
  <method id="method:removeXSLParams" idfk="method:removeXSLParams" inherited="1" name="removeXSLParams" source="jsx3.xml.Cacheable"/>
  <method id="method:resetCacheData" idfk="method:resetCacheData" inherited="1" name="resetCacheData" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:resetData" idfk="method:resetData" inherited="1" name="resetData" source="jsx3.xml.Cacheable"/>
  <method id="method:resetXmlCacheData" idfk="method:resetXmlCacheData" inherited="1" name="resetXmlCacheData" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:resetXslCacheData" idfk="method:resetXslCacheData" inherited="1" name="resetXslCacheData" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:setNodeSet" idfk="method:setNodeSet" inherited="1" name="setNodeSet" source="jsx3.xml.Cacheable"/>
  <method id="method:setShareResources" idfk="method:setShareResources" inherited="1" name="setShareResources" source="jsx3.xml.Cacheable"/>
  <method id="method:setSourceXML" idfk="method:setSourceXML" inherited="1" name="setSourceXML" source="jsx3.xml.Cacheable"/>
  <method id="method:setXMLId" idfk="method:setXMLId" inherited="1" name="setXMLId" source="jsx3.xml.Cacheable"/>
  <method id="method:setXMLString" idfk="method:setXMLString" inherited="1" name="setXMLString" source="jsx3.xml.Cacheable"/>
  <method id="method:setXMLTransformers" idfk="method:setXMLTransformers" inherited="1" name="setXMLTransformers" source="jsx3.xml.Cacheable"/>
  <method id="method:setXMLURL" idfk="method:setXMLURL" inherited="1" name="setXMLURL" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:setXSLId" idfk="method:setXSLId" inherited="1" name="setXSLId" source="jsx3.xml.Cacheable"/>
  <method id="method:setXSLParam" idfk="method:setXSLParam" inherited="1" name="setXSLParam" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:setXSLString" idfk="method:setXSLString" inherited="1" name="setXSLString" source="jsx3.xml.Cacheable"/>
  <method deprecated="1" id="method:setXSLURL" idfk="method:setXSLURL" inherited="1" name="setXSLURL" source="jsx3.xml.Cacheable"/>
  <method id="method:setXmlAsync" idfk="method:setXmlAsync" inherited="1" name="setXmlAsync" source="jsx3.xml.Cacheable"/>
  <method id="method:setXmlBind" idfk="method:setXmlBind" inherited="1" name="setXmlBind" source="jsx3.xml.Cacheable"/>
  <method id="method:adoptRecord" idfk="method:adoptRecord" inherited="1" name="adoptRecord" source="jsx3.xml.CDF"/>
  <method id="method:adoptRecordBefore" idfk="method:adoptRecordBefore" inherited="1" name="adoptRecordBefore" source="jsx3.xml.CDF"/>
  <method id="method:convertProperties" idfk="method:convertProperties" inherited="1" name="convertProperties" source="jsx3.xml.CDF"/>
  <method id="method:deleteRecord" idfk="method:deleteRecord" inherited="1" name="deleteRecord" source="jsx3.xml.CDF"/>
  <method id="method:deleteRecordProperty" idfk="method:deleteRecordProperty" inherited="1" name="deleteRecordProperty" source="jsx3.xml.CDF"/>
  <method id="method:getRecord" idfk="method:getRecord" inherited="1" name="getRecord" source="jsx3.xml.CDF"/>
  <method id="method:getRecordIds" idfk="method:getRecordIds" inherited="1" name="getRecordIds" source="jsx3.xml.CDF"/>
  <method id="method:getRecordNode" idfk="method:getRecordNode" inherited="1" name="getRecordNode" source="jsx3.xml.CDF"/>
  <method id="method:insertRecord" idfk="method:insertRecord" inherited="1" name="insertRecord" source="jsx3.xml.CDF"/>
  <method id="method:insertRecordBefore" idfk="method:insertRecordBefore" inherited="1" name="insertRecordBefore" source="jsx3.xml.CDF"/>
  <method id="method:insertRecordNode" idfk="method:insertRecordNode" inherited="1" name="insertRecordNode" source="jsx3.xml.CDF"/>
  <method id="method:insertRecordProperty" idfk="method:insertRecordProperty" inherited="1" name="insertRecordProperty" source="jsx3.xml.CDF"/>
  <method deprecated="1" id="method:reloadFromSource" idfk="method:reloadFromSource" inherited="1" name="reloadFromSource" source="jsx3.xml.CDF"/>
  <method id="method:getBackground" idfk="method:getBackground" inherited="1" name="getBackground" source="jsx3.gui.Block"/>
  <method id="method:getBackgroundColor" idfk="method:getBackgroundColor" inherited="1" name="getBackgroundColor" source="jsx3.gui.Block"/>
  <method id="method:getBorder" idfk="method:getBorder" inherited="1" name="getBorder" source="jsx3.gui.Block"/>
  <method id="method:getCDFAttribute" idfk="method:getCDFAttribute" inherited="1" name="getCDFAttribute" source="jsx3.gui.Block"/>
  <method id="method:getCDFId" idfk="method:getCDFId" inherited="1" name="getCDFId" source="jsx3.gui.Block"/>
  <method id="method:getCSSOverride" idfk="method:getCSSOverride" inherited="1" name="getCSSOverride" source="jsx3.gui.Block"/>
  <method id="method:getClassName" idfk="method:getClassName" inherited="1" name="getClassName" source="jsx3.gui.Block"/>
  <method id="method:getColor" idfk="method:getColor" inherited="1" name="getColor" source="jsx3.gui.Block"/>
  <method id="method:getCursor" idfk="method:getCursor" inherited="1" name="getCursor" source="jsx3.gui.Block"/>
  <method id="method:getDimensions" idfk="method:getDimensions" inherited="1" name="getDimensions" source="jsx3.gui.Block"/>
  <method id="method:getDisplay" idfk="method:getDisplay" inherited="1" name="getDisplay" source="jsx3.gui.Block"/>
  <method id="method:getFontName" idfk="method:getFontName" inherited="1" name="getFontName" source="jsx3.gui.Block"/>
  <method id="method:getFontSize" idfk="method:getFontSize" inherited="1" name="getFontSize" source="jsx3.gui.Block"/>
  <method id="method:getFontWeight" idfk="method:getFontWeight" inherited="1" name="getFontWeight" source="jsx3.gui.Block"/>
  <method id="method:getHeight" idfk="method:getHeight" inherited="1" name="getHeight" source="jsx3.gui.Block"/>
  <method id="method:getIndex" idfk="method:getIndex" inherited="1" name="getIndex" source="jsx3.gui.Block"/>
  <method id="method:getLeft" idfk="method:getLeft" inherited="1" name="getLeft" source="jsx3.gui.Block"/>
  <method id="method:getMargin" idfk="method:getMargin" inherited="1" name="getMargin" source="jsx3.gui.Block"/>
  <method id="method:getOverflow" idfk="method:getOverflow" inherited="1" name="getOverflow" source="jsx3.gui.Block"/>
  <method id="method:getPadding" idfk="method:getPadding" inherited="1" name="getPadding" source="jsx3.gui.Block"/>
  <method id="method:getRelativePosition" idfk="method:getRelativePosition" inherited="1" name="getRelativePosition" source="jsx3.gui.Block"/>
  <method id="method:getTagName" idfk="method:getTagName" inherited="1" name="getTagName" source="jsx3.gui.Block"/>
  <method id="method:getText" idfk="method:getText" inherited="1" name="getText" source="jsx3.gui.Block"/>
  <method id="method:getTextAlign" idfk="method:getTextAlign" inherited="1" name="getTextAlign" source="jsx3.gui.Block"/>
  <method id="method:getTip" idfk="method:getTip" inherited="1" name="getTip" source="jsx3.gui.Block"/>
  <method id="method:getTop" idfk="method:getTop" inherited="1" name="getTop" source="jsx3.gui.Block"/>
  <method id="method:getVisibility" idfk="method:getVisibility" inherited="1" name="getVisibility" source="jsx3.gui.Block"/>
  <method id="method:getWidth" idfk="method:getWidth" inherited="1" name="getWidth" source="jsx3.gui.Block"/>
  <method id="method:getZIndex" idfk="method:getZIndex" inherited="1" name="getZIndex" source="jsx3.gui.Block"/>
  <method id="method:hideMask" idfk="method:hideMask" inherited="1" name="hideMask" source="jsx3.gui.Block"/>
  <method id="method:setBackground" idfk="method:setBackground" inherited="1" name="setBackground" source="jsx3.gui.Block"/>
  <method id="method:setBackgroundColor" idfk="method:setBackgroundColor" inherited="1" name="setBackgroundColor" source="jsx3.gui.Block"/>
  <method id="method:setBorder" idfk="method:setBorder" inherited="1" name="setBorder" source="jsx3.gui.Block"/>
  <method id="method:setCDFAttribute" idfk="method:setCDFAttribute" inherited="1" name="setCDFAttribute" source="jsx3.gui.Block"/>
  <method id="method:setCDFId" idfk="method:setCDFId" inherited="1" name="setCDFId" source="jsx3.gui.Block"/>
  <method id="method:setCSSOverride" idfk="method:setCSSOverride" inherited="1" name="setCSSOverride" source="jsx3.gui.Block"/>
  <method id="method:setClassName" idfk="method:setClassName" inherited="1" name="setClassName" source="jsx3.gui.Block"/>
  <method id="method:setColor" idfk="method:setColor" inherited="1" name="setColor" source="jsx3.gui.Block"/>
  <method id="method:setCursor" idfk="method:setCursor" inherited="1" name="setCursor" source="jsx3.gui.Block"/>
  <method id="method:setDimensions" idfk="method:setDimensions" inherited="1" name="setDimensions" source="jsx3.gui.Block"/>
  <method id="method:setDisplay" idfk="method:setDisplay" inherited="1" name="setDisplay" source="jsx3.gui.Block"/>
  <method id="method:setFontName" idfk="method:setFontName" inherited="1" name="setFontName" source="jsx3.gui.Block"/>
  <method id="method:setFontSize" idfk="method:setFontSize" inherited="1" name="setFontSize" source="jsx3.gui.Block"/>
  <method id="method:setFontWeight" idfk="method:setFontWeight" inherited="1" name="setFontWeight" source="jsx3.gui.Block"/>
  <method id="method:setHeight" idfk="method:setHeight" inherited="1" name="setHeight" source="jsx3.gui.Block"/>
  <method id="method:setIndex" idfk="method:setIndex" inherited="1" name="setIndex" source="jsx3.gui.Block"/>
  <method id="method:setLeft" idfk="method:setLeft" inherited="1" name="setLeft" source="jsx3.gui.Block"/>
  <method id="method:setMargin" idfk="method:setMargin" inherited="1" name="setMargin" source="jsx3.gui.Block"/>
  <method id="method:setOverflow" idfk="method:setOverflow" inherited="1" name="setOverflow" source="jsx3.gui.Block"/>
  <method id="method:setPadding" idfk="method:setPadding" inherited="1" name="setPadding" source="jsx3.gui.Block"/>
  <method id="method:setRelativePosition" idfk="method:setRelativePosition" inherited="1" name="setRelativePosition" source="jsx3.gui.Block"/>
  <method id="method:setTagName" idfk="method:setTagName" inherited="1" name="setTagName" source="jsx3.gui.Block"/>
  <method id="method:setText" idfk="method:setText" inherited="1" name="setText" source="jsx3.gui.Block"/>
  <method id="method:setTextAlign" idfk="method:setTextAlign" inherited="1" name="setTextAlign" source="jsx3.gui.Block"/>
  <method id="method:setTip" idfk="method:setTip" inherited="1" name="setTip" source="jsx3.gui.Block"/>
  <method id="method:setTop" idfk="method:setTop" inherited="1" name="setTop" source="jsx3.gui.Block"/>
  <method id="method:setVisibility" idfk="method:setVisibility" inherited="1" name="setVisibility" source="jsx3.gui.Block"/>
  <method id="method:setWidth" idfk="method:setWidth" inherited="1" name="setWidth" source="jsx3.gui.Block"/>
  <method id="method:setZIndex" idfk="method:setZIndex" inherited="1" name="setZIndex" source="jsx3.gui.Block"/>
  <method id="method:showMask" idfk="method:showMask" inherited="1" name="showMask" source="jsx3.gui.Block"/>
  <method id="method:doEvent" idfk="method:doEvent" inherited="1" name="doEvent" source="jsx3.gui.Interactive"/>
  <method id="method:getCanDrag" idfk="method:getCanDrag" inherited="1" name="getCanDrag" source="jsx3.gui.Interactive"/>
  <method id="method:getCanDrop" idfk="method:getCanDrop" inherited="1" name="getCanDrop" source="jsx3.gui.Interactive"/>
  <method id="method:getCanMove" idfk="method:getCanMove" inherited="1" name="getCanMove" source="jsx3.gui.Interactive"/>
  <method id="method:getCanSpy" idfk="method:getCanSpy" inherited="1" name="getCanSpy" source="jsx3.gui.Interactive"/>
  <method id="method:getEvent" idfk="method:getEvent" inherited="1" name="getEvent" source="jsx3.gui.Interactive"/>
  <method id="method:getEvents" idfk="method:getEvents" inherited="1" name="getEvents" source="jsx3.gui.Interactive"/>
  <method id="method:getMenu" idfk="method:getMenu" inherited="1" name="getMenu" source="jsx3.gui.Interactive"/>
  <method id="method:hasEvent" idfk="method:hasEvent" inherited="1" name="hasEvent" source="jsx3.gui.Interactive"/>
  <method id="method:registerHotKey" idfk="method:registerHotKey" inherited="1" name="registerHotKey" source="jsx3.gui.Interactive"/>
  <method id="method:removeEvent" idfk="method:removeEvent" inherited="1" name="removeEvent" source="jsx3.gui.Interactive"/>
  <method id="method:removeEvents" idfk="method:removeEvents" inherited="1" name="removeEvents" source="jsx3.gui.Interactive"/>
  <method id="method:setCanDrag" idfk="method:setCanDrag" inherited="1" name="setCanDrag" source="jsx3.gui.Interactive"/>
  <method id="method:setCanDrop" idfk="method:setCanDrop" inherited="1" name="setCanDrop" source="jsx3.gui.Interactive"/>
  <method id="method:setCanMove" idfk="method:setCanMove" inherited="1" name="setCanMove" source="jsx3.gui.Interactive"/>
  <method id="method:setCanSpy" idfk="method:setCanSpy" inherited="1" name="setCanSpy" source="jsx3.gui.Interactive"/>
  <method id="method:setEvent" idfk="method:setEvent" inherited="1" name="setEvent" source="jsx3.gui.Interactive"/>
  <method id="method:setMenu" idfk="method:setMenu" inherited="1" name="setMenu" source="jsx3.gui.Interactive"/>
  <method id="method:setSpyStyles" idfk="method:setSpyStyles" inherited="1" name="setSpyStyles" source="jsx3.gui.Interactive"/>
  <method id="method:showSpy" idfk="method:showSpy" inherited="1" name="showSpy" source="jsx3.gui.Interactive"/>
  <method id="method:focus" idfk="method:focus" inherited="1" name="focus" source="jsx3.gui.Painted"/>
  <method id="method:getAbsolutePosition" idfk="method:getAbsolutePosition" inherited="1" name="getAbsolutePosition" source="jsx3.gui.Painted"/>
  <method id="method:getAttribute" idfk="method:getAttribute" inherited="1" name="getAttribute" source="jsx3.gui.Painted"/>
  <method id="method:getAttributes" idfk="method:getAttributes" inherited="1" name="getAttributes" source="jsx3.gui.Painted"/>
  <method id="method:getDynamicProperty" idfk="method:getDynamicProperty" inherited="1" name="getDynamicProperty" source="jsx3.gui.Painted"/>
  <method id="method:getRendered" idfk="method:getRendered" inherited="1" name="getRendered" source="jsx3.gui.Painted"/>
  <method deprecated="1" id="method:insertHTML" idfk="method:insertHTML" inherited="1" name="insertHTML" source="jsx3.gui.Painted"/>
  <method id="method:onAfterPaint" idfk="method:onAfterPaint" inherited="1" name="onAfterPaint" source="jsx3.gui.Painted"/>
  <method id="method:onAfterRestoreView" idfk="method:onAfterRestoreView" inherited="1" name="onAfterRestoreView" source="jsx3.gui.Painted"/>
  <method id="method:paintChild" idfk="method:paintChild" inherited="1" name="paintChild" source="jsx3.gui.Painted"/>
  <method id="method:paintChildren" idfk="method:paintChildren" inherited="1" name="paintChildren" source="jsx3.gui.Painted"/>
  <method id="method:recalcBox" idfk="method:recalcBox" inherited="1" name="recalcBox" source="jsx3.gui.Painted"/>
  <method id="method:removeAttribute" idfk="method:removeAttribute" inherited="1" name="removeAttribute" source="jsx3.gui.Painted"/>
  <method id="method:removeAttributes" idfk="method:removeAttributes" inherited="1" name="removeAttributes" source="jsx3.gui.Painted"/>
  <method id="method:repaint" idfk="method:repaint" inherited="1" name="repaint" source="jsx3.gui.Painted"/>
  <method id="method:setAttribute" idfk="method:setAttribute" inherited="1" name="setAttribute" source="jsx3.gui.Painted"/>
  <method id="method:setDynamicProperty" idfk="method:setDynamicProperty" inherited="1" name="setDynamicProperty" source="jsx3.gui.Painted"/>
  <method id="method:adoptChild" idfk="method:adoptChild" inherited="1" name="adoptChild" source="jsx3.app.Model"/>
  <method id="method:doClone" idfk="method:doClone" inherited="1" name="doClone" source="jsx3.app.Model"/>
  <method id="method:findAncestor" idfk="method:findAncestor" inherited="1" name="findAncestor" source="jsx3.app.Model"/>
  <method id="method:findDescendants" idfk="method:findDescendants" inherited="1" name="findDescendants" source="jsx3.app.Model"/>
  <method id="method:getAncestorOfName" idfk="method:getAncestorOfName" inherited="1" name="getAncestorOfName" source="jsx3.app.Model"/>
  <method id="method:getAncestorOfType" idfk="method:getAncestorOfType" inherited="1" name="getAncestorOfType" source="jsx3.app.Model"/>
  <method id="method:getChild" idfk="method:getChild" inherited="1" name="getChild" source="jsx3.app.Model"/>
  <method id="method:getChildIndex" idfk="method:getChildIndex" inherited="1" name="getChildIndex" source="jsx3.app.Model"/>
  <method id="method:getChildren" idfk="method:getChildren" inherited="1" name="getChildren" source="jsx3.app.Model"/>
  <method id="method:getDescendantOfName" idfk="method:getDescendantOfName" inherited="1" name="getDescendantOfName" source="jsx3.app.Model"/>
  <method id="method:getDescendantsOfType" idfk="method:getDescendantsOfType" inherited="1" name="getDescendantsOfType" source="jsx3.app.Model"/>
  <method id="method:getFirstChild" idfk="method:getFirstChild" inherited="1" name="getFirstChild" source="jsx3.app.Model"/>
  <method id="method:getFirstChildOfType" idfk="method:getFirstChildOfType" inherited="1" name="getFirstChildOfType" source="jsx3.app.Model"/>
  <method id="method:getHelpId" idfk="method:getHelpId" inherited="1" name="getHelpId" source="jsx3.app.Model"/>
  <method id="method:getId" idfk="method:getId" inherited="1" name="getId" source="jsx3.app.Model"/>
  <method id="method:getLastChild" idfk="method:getLastChild" inherited="1" name="getLastChild" source="jsx3.app.Model"/>
  <method id="method:getLoadType" idfk="method:getLoadType" inherited="1" name="getLoadType" source="jsx3.app.Model"/>
  <method id="method:getMetaValue" idfk="method:getMetaValue" inherited="1" name="getMetaValue" source="jsx3.app.Model"/>
  <method id="method:getNS" idfk="method:getNS" inherited="1" name="getNS" source="jsx3.app.Model"/>
  <method id="method:getName" idfk="method:getName" inherited="1" name="getName" source="jsx3.app.Model"/>
  <method id="method:getNextSibling" idfk="method:getNextSibling" inherited="1" name="getNextSibling" source="jsx3.app.Model"/>
  <method final="1" id="method:getParent" idfk="method:getParent" inherited="1" name="getParent" source="jsx3.app.Model"/>
  <method id="method:getPersistence" idfk="method:getPersistence" inherited="1" name="getPersistence" source="jsx3.app.Model"/>
  <method id="method:getPreviousSibling" idfk="method:getPreviousSibling" inherited="1" name="getPreviousSibling" source="jsx3.app.Model"/>
  <method id="method:getServer" idfk="method:getServer" inherited="1" name="getServer" source="jsx3.app.Model"/>
  <method id="method:getUriResolver" idfk="method:getUriResolver" inherited="1" name="getUriResolver" source="jsx3.app.Model"/>
  <method id="method:insertBefore" idfk="method:insertBefore" inherited="1" name="insertBefore" source="jsx3.app.Model"/>
  <method id="method:load" idfk="method:load" inherited="1" name="load" source="jsx3.app.Model"/>
  <method id="method:loadAndCache" idfk="method:loadAndCache" inherited="1" name="loadAndCache" source="jsx3.app.Model"/>
  <method id="method:loadXML" idfk="method:loadXML" inherited="1" name="loadXML" source="jsx3.app.Model"/>
  <method id="method:onAfterAssemble" idfk="method:onAfterAssemble" inherited="1" name="onAfterAssemble" source="jsx3.app.Model"/>
  <method id="method:onAfterAttach" idfk="method:onAfterAttach" inherited="1" name="onAfterAttach" source="jsx3.app.Model"/>
  <method id="method:onBeforeAssemble" idfk="method:onBeforeAssemble" inherited="1" name="onBeforeAssemble" source="jsx3.app.Model"/>
  <method id="method:onChangeServer" idfk="method:onChangeServer" inherited="1" name="onChangeServer" source="jsx3.app.Model"/>
  <method id="method:onChildAdded" idfk="method:onChildAdded" inherited="1" name="onChildAdded" source="jsx3.app.Model"/>
  <method id="method:onDestroy" idfk="method:onDestroy" inherited="1" name="onDestroy" source="jsx3.app.Model"/>
  <method id="method:onRemoveChild" idfk="method:onRemoveChild" inherited="1" name="onRemoveChild" source="jsx3.app.Model"/>
  <method id="method:onSetChild" idfk="method:onSetChild" inherited="1" name="onSetChild" source="jsx3.app.Model"/>
  <method id="method:onSetParent" idfk="method:onSetParent" inherited="1" name="onSetParent" source="jsx3.app.Model"/>
  <method id="method:removeChild" idfk="method:removeChild" inherited="1" name="removeChild" source="jsx3.app.Model"/>
  <method id="method:removeChildren" idfk="method:removeChildren" inherited="1" name="removeChildren" source="jsx3.app.Model"/>
  <method id="method:selectDescendants" idfk="method:selectDescendants" inherited="1" name="selectDescendants" source="jsx3.app.Model"/>
  <method id="method:setChild" idfk="method:setChild" inherited="1" name="setChild" source="jsx3.app.Model"/>
  <method id="method:setHelpId" idfk="method:setHelpId" inherited="1" name="setHelpId" source="jsx3.app.Model"/>
  <method id="method:setLoadType" idfk="method:setLoadType" inherited="1" name="setLoadType" source="jsx3.app.Model"/>
  <method id="method:setMetaValue" idfk="method:setMetaValue" inherited="1" name="setMetaValue" source="jsx3.app.Model"/>
  <method id="method:setName" idfk="method:setName" inherited="1" name="setName" source="jsx3.app.Model"/>
  <method id="method:setPersistence" idfk="method:setPersistence" inherited="1" name="setPersistence" source="jsx3.app.Model"/>
  <method id="method:toString" idfk="method:toString" inherited="1" name="toString" source="jsx3.app.Model"/>
  <method id="method:toXML" idfk="method:toXML" inherited="1" name="toXML" source="jsx3.app.Model"/>
  <method id="method:toXMLDoc" idfk="method:toXMLDoc" inherited="1" name="toXMLDoc" source="jsx3.app.Model"/>
  <method id="method:publish" idfk="method:publish" inherited="1" name="publish" source="jsx3.util.EventDispatcher"/>
  <method id="method:subscribe" idfk="method:subscribe" inherited="1" name="subscribe" source="jsx3.util.EventDispatcher"/>
  <method id="method:unsubscribe" idfk="method:unsubscribe" inherited="1" name="unsubscribe" source="jsx3.util.EventDispatcher"/>
  <method id="method:unsubscribeAll" idfk="method:unsubscribeAll" inherited="1" name="unsubscribeAll" source="jsx3.util.EventDispatcher"/>
  <method id="method:clone" idfk="method:clone" inherited="1" name="clone" source="jsx3.lang.Object"/>
  <method id="method:equals" idfk="method:equals" inherited="1" name="equals" source="jsx3.lang.Object"/>
  <method id="method:eval" idfk="method:eval" inherited="1" name="eval" source="jsx3.lang.Object"/>
  <method id="method:getClass" idfk="method:getClass" inherited="1" name="getClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOf" idfk="method:getInstanceOf" inherited="1" name="getInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfClass" idfk="method:getInstanceOfClass" inherited="1" name="getInstanceOfClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfPackage" idfk="method:getInstanceOfPackage" inherited="1" name="getInstanceOfPackage" source="jsx3.lang.Object"/>
  <method id="method:instanceOf" idfk="method:instanceOf" inherited="1" name="instanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isInstanceOf" idfk="method:isInstanceOf" inherited="1" name="isInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isSubclassOf" idfk="method:isSubclassOf" inherited="1" name="isSubclassOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:jsxmix" idfk="method:jsxmix" inherited="1" name="jsxmix" source="jsx3.lang.Object"/>
  <method id="method:jsxsuper" idfk="method:jsxsuper" inherited="1" name="jsxsuper" source="jsx3.lang.Object"/>
  <method id="method:jsxsupermix" idfk="method:jsxsupermix" inherited="1" name="jsxsupermix" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:setInstanceOf" idfk="method:setInstanceOf" inherited="1" name="setInstanceOf" source="jsx3.lang.Object"/>
</class>
