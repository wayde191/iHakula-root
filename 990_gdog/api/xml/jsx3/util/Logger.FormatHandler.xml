<?xml version="1.0" encoding="UTF-8"?>
<class abstract="1" access="public" id="class:jsx3.util.Logger.FormatHandler" name="jsx3.util.Logger.FormatHandler" package="jsx3.util" shortname="Logger.FormatHandler">
  <text>A subclass of <code>Handler</code> that includes functionality for formatting logging records as human-readable
strings.
<p/>
The following tokens are supported in the format:
<ul>
<li>%s or {0} – record serial number</li>
<li>%n or {1}  – logger name</li>
<li>%l or {2}  – record level as string</li>
<li>%M or {3}  – record message</li>
<li>%f or {4}  – record calling function</li>
<li>%d or {5,date}  – record date as yyyy-MM-dd</li>
<li>%t or {5,time} – record time as HH:mm:ss.mmm</li>
</ul>
 </text>
  <superclass id="super:0" loaded="1" name="Object"/>
  <superclass id="super:1" loaded="1" name="jsx3.lang.Object"/>
  <superclass direct="1" id="super:2" loaded="1" name="jsx3.util.Logger.Handler"/>
  <subclass id="sub:0" loaded="1" name="jsx3.app.Monitor"/>
  <subclass id="sub:1" loaded="1" name="jsx3.util.Logger.AlertHandler"/>
  <subclass id="sub:2" loaded="1" name="jsx3.util.Logger.ConsoleHandler"/>
  <method access="public" id="method:getFormat" name="getFormat">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the format to use for formatting logging records.</text>
  </method>
  <method access="public" id="method:setFormat" name="setFormat">
    <param name="strFormat" text="">
      <type link="1" name="String"/>
    </param>
    <text>Sets the format to use for formatting logging records.</text>
  </method>
  <method id="method:getLevel" idfk="method:getLevel" inherited="1" name="getLevel" source="jsx3.util.Logger.Handler"/>
  <method id="method:getName" idfk="method:getName" inherited="1" name="getName" source="jsx3.util.Logger.Handler"/>
  <method abstract="1" id="method:handle" idfk="method:handle" inherited="1" name="handle" source="jsx3.util.Logger.Handler"/>
  <method id="method:isLoggable" idfk="method:isLoggable" inherited="1" name="isLoggable" source="jsx3.util.Logger.Handler"/>
  <method id="method:setLevel" idfk="method:setLevel" inherited="1" name="setLevel" source="jsx3.util.Logger.Handler"/>
  <method id="method:clone" idfk="method:clone" inherited="1" name="clone" source="jsx3.lang.Object"/>
  <method id="method:equals" idfk="method:equals" inherited="1" name="equals" source="jsx3.lang.Object"/>
  <method id="method:eval" idfk="method:eval" inherited="1" name="eval" source="jsx3.lang.Object"/>
  <method id="method:getClass" idfk="method:getClass" inherited="1" name="getClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOf" idfk="method:getInstanceOf" inherited="1" name="getInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfClass" idfk="method:getInstanceOfClass" inherited="1" name="getInstanceOfClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfPackage" idfk="method:getInstanceOfPackage" inherited="1" name="getInstanceOfPackage" source="jsx3.lang.Object"/>
  <method id="method:instanceOf" idfk="method:instanceOf" inherited="1" name="instanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isInstanceOf" idfk="method:isInstanceOf" inherited="1" name="isInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isSubclassOf" idfk="method:isSubclassOf" inherited="1" name="isSubclassOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:jsxmix" idfk="method:jsxmix" inherited="1" name="jsxmix" source="jsx3.lang.Object"/>
  <method id="method:jsxsuper" idfk="method:jsxsuper" inherited="1" name="jsxsuper" source="jsx3.lang.Object"/>
  <method id="method:jsxsupermix" idfk="method:jsxsupermix" inherited="1" name="jsxsupermix" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:setInstanceOf" idfk="method:setInstanceOf" inherited="1" name="setInstanceOf" source="jsx3.lang.Object"/>
  <method id="method:toString" idfk="method:toString" inherited="1" name="toString" source="jsx3.lang.Object"/>
</class>
