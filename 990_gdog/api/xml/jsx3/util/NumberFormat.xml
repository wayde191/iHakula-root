<?xml version="1.0" encoding="UTF-8"?>
<class access="public" id="class:jsx3.util.NumberFormat" name="jsx3.util.NumberFormat" package="jsx3.util" shortname="NumberFormat" since="3.2&#10; ">
  <text>Formats numbers. This class in localized, meaning that numbers are formatted in a locale-sensitive way.
<p/>
The format takes the form: <code>Prefix Format Suffix</code>. A single number format can specify a format for
a positive value and one for a negative value. In this case the form is: <code>PosPrefix PosFormat
PosSuffix;NegPrefix NegFormat NegSuffix</code>. (The spaces between prefix, format, and suffix should not be
included in the actual format.)
<p/>
The format can include the following characters. Each character is replaced with the locale-specific text when
a number is formatted.
<ul>
<li>
        <code>0</code> - Digit</li>
<li>
        <code>#</code> - Digit, zero shows as absent</li>
<li>
        <code>.</code> - Decimal separator or monetary decimal separator</li>
<li>
        <code>-</code> - Minus sign</li>
<li>
        <code>,</code> - Grouping separator</li>
<li>
        <code>;</code> - Separates positive and negative subpatterns</li>
<li>
        <code>%</code> - Multiply by 100 and show as percentage</li>
<li>
        <code>‰</code> - Multiply by 1000 and show as per-mille</li>
<li>
        <code>¤</code> - Currency sign, replaced by currency symbol</li>
<li>
        <code>'</code> - Used to quote special characters in a prefix or suffix. To create a single quote
    itself, use two in a row</li>
</ul>
  </text>
  <superclass id="super:0" loaded="1" name="Object"/>
  <superclass direct="1" id="super:1" loaded="1" name="jsx3.lang.Object"/>
  <field access="public" class="jsx3.util.NumberFormat" final="1" fullname="jsx3.util.NumberFormat.NUMBER" id="sfield:NUMBER" name="NUMBER" since="3.7&#10;   " static="1" value="1">
    <type class="Number" link="1" name="int"/>
    <text> Type for a decimal number format.</text>
  </field>
  <field access="public" class="jsx3.util.NumberFormat" final="1" fullname="jsx3.util.NumberFormat.INTEGER" id="sfield:INTEGER" name="INTEGER" since="3.7&#10;   " static="1" value="2">
    <type class="Number" link="1" name="int"/>
    <text> Type for an integer number format.</text>
  </field>
  <field access="public" class="jsx3.util.NumberFormat" final="1" fullname="jsx3.util.NumberFormat.CURRENCY" id="sfield:CURRENCY" name="CURRENCY" since="3.7&#10;   " static="1" value="3">
    <type class="Number" link="1" name="int"/>
    <text> Type for a currency number format.</text>
  </field>
  <method access="public" id="smethod:getInstance" name="getInstance" since="3.7&#10;   " static="1">
    <param name="intType" text="&lt;code&gt;NUMBER&lt;/code&gt;, &lt;code&gt;INTEGER&lt;/code&gt;, or &lt;code&gt;CURRENCY&lt;/code&gt;.">
      <type class="Number" link="1" name="int"/>
    </param>
    <param name="objLocale" text="the locale for which to return a format. If this parameter is not provided,&#10;  the default system locale is used.">
      <type link="1" name="jsx3.util.Locale"/>
    </param>
    <return text="">
      <type link="1" name="jsx3.util.NumberFormat"/>
    </return>
    <text>Returns a number format appropriate for <code>objLocale</code>.</text>
  </method>
  <method access="public" id="smethod:getIntegerInstance" name="getIntegerInstance" static="1">
    <param name="objLocale" text="the locale for which to return a format. If this parameter is not provided,&#10;  the default system locale is used.">
      <type link="1" name="jsx3.util.Locale"/>
    </param>
    <return text="">
      <type link="1" name="jsx3.util.NumberFormat"/>
    </return>
    <text>Returns an integer number format appropriate for <code>objLocale</code>.</text>
  </method>
  <method access="public" id="smethod:getNumberInstance" name="getNumberInstance" static="1">
    <param name="objLocale" text="the locale for which to return a format. If this parameter is not provided,&#10;  the default system locale is used.">
      <type link="1" name="jsx3.util.Locale"/>
    </param>
    <return text="">
      <type link="1" name="jsx3.util.NumberFormat"/>
    </return>
    <text>Returns a general number format appropriate for <code>objLocale</code>.</text>
  </method>
  <method access="public" id="smethod:getCurrencyInstance" name="getCurrencyInstance" static="1">
    <param name="objLocale" text="the locale for which to return a format. If this parameter is not provided,&#10;  the default system locale is used.">
      <type link="1" name="jsx3.util.Locale"/>
    </param>
    <return text="">
      <type link="1" name="jsx3.util.NumberFormat"/>
    </return>
    <text>Returns a currency number format appropriate for <code>objLocale</code>.</text>
  </method>
  <method access="public" id="smethod:getPercentInstance" name="getPercentInstance" static="1">
    <param name="objLocale" text="the locale for which to return a format. If this parameter is not provided,&#10;  the default system locale is used.">
      <type link="1" name="jsx3.util.Locale"/>
    </param>
    <return text="">
      <type link="1" name="jsx3.util.NumberFormat"/>
    </return>
    <text>Returns a percent number format appropriate for <code>objLocale</code>.</text>
  </method>
  <constructor access="public" id="method:init" name="init">
    <param name="strFormat" text="the number format.">
      <type link="1" name="String"/>
    </param>
    <param name="objLocale" text="the locale for the format. By default the system locale is used.">
      <type link="1" name="jsx3.util.Locale"/>
    </param>
    <throws text="if &lt;code&gt;strFormat&lt;/code&gt; cannot be parsed.&#10;   ">
      <type link="1" name="jsx3.lang.Exception"/>
    </throws>
    <text>Creates a new number format instance.</text>
  </constructor>
  <method access="public" id="method:getLocale" name="getLocale">
    <return text="">
      <type link="1" name="jsx3.util.Locale"/>
    </return>
  </method>
  <method access="public" id="method:setLocale" name="setLocale">
    <param name="objLocale" text="">
      <type link="1" name="jsx3.util.Locale"/>
    </param>
  </method>
  <method access="public" id="method:format" name="format">
    <param name="number" text="">
      <type link="1" name="String"/>
      <type link="1" name="Object"/>
      <type link="1" name="Number"/>
    </param>
    <return text="">
      <type link="1" name="String"/>
    </return>
  </method>
  <method access="public" id="method:parse" name="parse" since="3.7&#10;   ">
    <param name="s" text="">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="Number"/>
    </return>
    <text>Parses a string according to this number format and returns the resulting value.
<b/>
<b>Note:</b> this method ignores any non-significant characters. This method does not handle
localized digit characters other than ASCII 0-9.</text>
  </method>
  <method access="public" id="method:toString" name="toString">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <overrides id="overrides:toString" idfk="method:toString" name="toString" source="jsx3.lang.Object"/>
  </method>
  <method id="method:clone" idfk="method:clone" inherited="1" name="clone" source="jsx3.lang.Object"/>
  <method id="method:equals" idfk="method:equals" inherited="1" name="equals" source="jsx3.lang.Object"/>
  <method id="method:eval" idfk="method:eval" inherited="1" name="eval" source="jsx3.lang.Object"/>
  <method id="method:getClass" idfk="method:getClass" inherited="1" name="getClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOf" idfk="method:getInstanceOf" inherited="1" name="getInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfClass" idfk="method:getInstanceOfClass" inherited="1" name="getInstanceOfClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfPackage" idfk="method:getInstanceOfPackage" inherited="1" name="getInstanceOfPackage" source="jsx3.lang.Object"/>
  <method id="method:instanceOf" idfk="method:instanceOf" inherited="1" name="instanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isInstanceOf" idfk="method:isInstanceOf" inherited="1" name="isInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isSubclassOf" idfk="method:isSubclassOf" inherited="1" name="isSubclassOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:jsxmix" idfk="method:jsxmix" inherited="1" name="jsxmix" source="jsx3.lang.Object"/>
  <method id="method:jsxsuper" idfk="method:jsxsuper" inherited="1" name="jsxsuper" source="jsx3.lang.Object"/>
  <method id="method:jsxsupermix" idfk="method:jsxsupermix" inherited="1" name="jsxsupermix" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:setInstanceOf" idfk="method:setInstanceOf" inherited="1" name="setInstanceOf" source="jsx3.lang.Object"/>
</class>
