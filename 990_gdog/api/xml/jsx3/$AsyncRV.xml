<?xml version="1.0" encoding="UTF-8"?>
<class access="public" id="class:jsx3.$AsyncRV" name="jsx3.$AsyncRV" package="jsx3" shortname="$AsyncRV" since="3.7">
  <text>The return value from an asynchronous method.</text>
  <see idfk="smethod:$Y" source="jsx3">jsx3.$Y()</see>
  <superclass direct="1" id="super:0" loaded="1" name="Object"/>
  <method access="public" id="method:rv" name="rv">
    <return text="">
      <type link="1" name="Object"/>
    </return>
    <throws text="if called before &lt;code&gt;done()&lt;/code&gt; is called on corresponding callback object.&#10;     ">
      <type name="Error"/>
    </throws>
    <text>Returns the return value from the asynchronous method.</text>
  </method>
  <method access="public" id="method:when" name="when">
    <param name="cb" text="">
      <type link="1" name="Function"/>
      <type link="1" name="jsx3.$AsyncCB"/>
    </param>
    <param name="rv" text="">
      <type link="1" name="Object"/>
    </param>
    <text>Registers code to be called when the asynchronous method completes.
<p/>
If argument <code>cb</code> is a function, then that function will be called when the asynchronous method
completes. This function will be called synchronously is the function has already completed. The
asynchronous method return value will be passed as the only argument to the function.
<p/>
If argument <code>cb</code> is an instance of <code>jsx3.$AsyncCB</code>, then its <code>done()</code> method
will be called when the asynchronous method completes. The done method will be passed the <code>rv</code>
argument it is is provided. Otherwise, it will be passed the return value of <code>cb</code>.</text>
  </method>
  <method access="public" id="method:and" name="and">
    <param name="rv" text="">
      <type link="1" name="jsx3.$AsyncRV" varargs="1"/>
    </param>
    <return text="">
      <type link="1" name="jsx3.$AsyncRV"/>
    </return>
    <text>Creates and returns an asynchronous return value that completes when this and <code>rv</code> have completed.</text>
  </method>
  <method access="public" id="method:or" name="or">
    <param name="rv" text="">
      <type link="1" name="jsx3.$AsyncRV" varargs="1"/>
    </param>
    <return text="">
      <type link="1" name="jsx3.$AsyncRV"/>
    </return>
    <text>Creates and returns an asynchronous return value that completes when this or <code>rv</code> have completed.</text>
  </method>
  <method id="method:toString" idfk="method:toString" inherited="1" name="toString" native="1" source="Object"/>
</class>
