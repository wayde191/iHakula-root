<?xml version="1.0" encoding="UTF-8"?>
<class access="public" id="class:jsx3.amp.ExtPoint" name="jsx3.amp.ExtPoint" package="jsx3.amp" shortname="ExtPoint">
  <text>An AMP extension point.
 </text>
  <superclass id="super:0" loaded="1" name="Object"/>
  <superclass direct="1" id="super:1" loaded="1" name="jsx3.lang.Object"/>
  <implements direct="1" id="implements:0" loaded="1" name="jsx3.util.EventDispatcher"/>
  <field access="public" class="jsx3.amp.ExtPoint" fullname="jsx3.amp.ExtPoint.EXTENDED" id="sfield:EXTENDED" name="EXTENDED" static="1" value="&quot;extended&quot;">
    <type link="1" name="String"/>
    <text> An event published by an extension point when it is extended by a new extension. </text>
  </field>
  <method access="public" id="method:getId" name="getId">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the full ID of this extension, which is unique among all extension points in the AMP engine.</text>
  </method>
  <method access="public" id="method:getLocalId" name="getLocalId">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the local ID of this extension point, which is defined by the <code>id</code> attribute of the XML
extension point declaration.</text>
  </method>
  <method access="public" id="method:getName" name="getName">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the name of this extension point, which is defined by the <code>name</code> attribute of the XML
extension point declaration.</text>
  </method>
  <method access="public" id="method:getPlugIn" name="getPlugIn">
    <return text="">
      <type link="1" name="jsx3.amp.PlugIn"/>
    </return>
    <text>Returns the plug-in declaring this extension point.</text>
  </method>
  <method access="public" id="method:getEngine" name="getEngine">
    <return text="">
      <type link="1" name="jsx3.amp.Engine"/>
    </return>
    <text>Returns the engine owning the plug-in owning this extension point.</text>
  </method>
  <method access="public" id="method:getExts" name="getExts">
    <return text="">
      <type link="1" name="jsx3.$Array">
        <type link="1" name="jsx3.amp.Ext"/>
      </type>
    </return>
    <text>Returns the list of extensions registered with this extension point.</text>
  </method>
  <method access="public" id="method:processExts" name="processExts">
    <param name="objProcessor" text="the visitor. This argument may be null if the XML declaration&#10;   of this extension point specifies a processor that can be constructed with the processor factory.">
      <type link="1" name="jsx3.amp.ExtProc"/>
      <type link="1" name="Function"/>
    </param>
    <param name="arrExt" text="optionally, a subset of the extensions of this extension point. Only these&#10;   extensions will be processed if this parameter is not empty.">
      <type link="1" name="Array">
        <type link="1" name="jsx3.amp.Ext"/>
      </type>
    </param>
    <return text="the extensions to process, defaults to all the extensions of this extension point.">
      <type link="1" name="jsx3.$Array">
        <type link="1" name="Object"/>
      </type>
    </return>
    <text>Processes each extension of this extension point using the visitor pattern.</text>
    <see idfk="smethod:process" source="jsx3.amp.ExtProc">jsx3.amp.ExtProc.process()</see>
    <see idfk="smethod:getProcessor" source="jsx3.amp.ExtProc">jsx3.amp.ExtProc.getProcessor()</see>
  </method>
  <method access="public" id="method:onExtension" name="onExtension">
    <param name="arrExts" text="">
      <type link="1" name="jsx3.$Array">
        <type link="1" name="jsx3.amp.Ext"/>
      </type>
    </param>
    <text>This method is called (after this extension point is instantiated) any time extensions are registered for this
point. Subclasses may override this method to perform custom functionality but should call <code>jsxsuper()</code>.</text>
  </method>
  <method id="method:publish" idfk="method:publish" inherited="1" name="publish" source="jsx3.util.EventDispatcher"/>
  <method id="method:subscribe" idfk="method:subscribe" inherited="1" name="subscribe" source="jsx3.util.EventDispatcher"/>
  <method id="method:unsubscribe" idfk="method:unsubscribe" inherited="1" name="unsubscribe" source="jsx3.util.EventDispatcher"/>
  <method id="method:unsubscribeAll" idfk="method:unsubscribeAll" inherited="1" name="unsubscribeAll" source="jsx3.util.EventDispatcher"/>
  <method id="method:clone" idfk="method:clone" inherited="1" name="clone" source="jsx3.lang.Object"/>
  <method id="method:equals" idfk="method:equals" inherited="1" name="equals" source="jsx3.lang.Object"/>
  <method id="method:eval" idfk="method:eval" inherited="1" name="eval" source="jsx3.lang.Object"/>
  <method id="method:getClass" idfk="method:getClass" inherited="1" name="getClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOf" idfk="method:getInstanceOf" inherited="1" name="getInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfClass" idfk="method:getInstanceOfClass" inherited="1" name="getInstanceOfClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfPackage" idfk="method:getInstanceOfPackage" inherited="1" name="getInstanceOfPackage" source="jsx3.lang.Object"/>
  <method id="method:instanceOf" idfk="method:instanceOf" inherited="1" name="instanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isInstanceOf" idfk="method:isInstanceOf" inherited="1" name="isInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isSubclassOf" idfk="method:isSubclassOf" inherited="1" name="isSubclassOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:jsxmix" idfk="method:jsxmix" inherited="1" name="jsxmix" source="jsx3.lang.Object"/>
  <method id="method:jsxsuper" idfk="method:jsxsuper" inherited="1" name="jsxsuper" source="jsx3.lang.Object"/>
  <method id="method:jsxsupermix" idfk="method:jsxsupermix" inherited="1" name="jsxsupermix" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:setInstanceOf" idfk="method:setInstanceOf" inherited="1" name="setInstanceOf" source="jsx3.lang.Object"/>
  <method id="method:toString" idfk="method:toString" inherited="1" name="toString" source="jsx3.lang.Object"/>
</class>
