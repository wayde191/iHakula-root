<?xml version="1.0" encoding="UTF-8"?>
<class access="public" id="class:jsx3.amp.XML" name="jsx3.amp.XML" package="jsx3.amp" shortname="XML">
  <text>An XML wrapper that can be backed either by a real XML node or by a nested object structure.
<p/>
To wrap a nested object structure, pass an object to the constructor with the following format:
<ul>
  <li>Every element has a <code>name()</code> property equal to the base node name</li>
  <li>Every element has a <code>children()</code> property that is an array of nested objects</li>
  <li>Every attribute of an element corresponds to a property whose name is "@" prepended to the attribute name</li>
  <li>Every nested child element is stored in the children() property and is also referended by another
      property whose name is "/" prepended to the base node name of the child element.</li>
</ul>
 </text>
  <superclass id="super:0" loaded="1" name="Object"/>
  <superclass direct="1" id="super:1" loaded="1" name="jsx3.lang.Object"/>
  <constructor access="public" id="method:init" name="init">
    <param name="elm" text="">
      <type link="1" name="jsx3.xml.Entity"/>
      <type link="1" name="Object"/>
    </param>
  </constructor>
  <method access="public" id="method:attr" name="attr">
    <param name="a" text="the name of the attribute.">
      <type link="1" name="String"/>
    </param>
    <return text="the value of the attribute.&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns an attribute of this element.</text>
  </method>
  <method access="public" id="method:nname" name="nname">
    <return text="the base name.&#10;   ">
      <type link="1" name="String"/>
    </return>
    <text>Returns the base name of this element.</text>
  </method>
  <method access="public" id="method:child" name="child">
    <param name="name" text="">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="jsx3.amp.XML"/>
    </return>
    <text>Returns a child element of this element whose base name is equal to <code>name</code>.</text>
  </method>
  <method access="public" id="method:children" name="children">
    <return text="">
      <type link="1" name="jsx3.$Array">
        <type link="1" name="jsx3.amp.XML"/>
      </type>
    </return>
    <text>Returns this child elements of this element.</text>
  </method>
  <method access="public" id="method:value" name="value">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the node value of this element.</text>
  </method>
  <method id="method:clone" idfk="method:clone" inherited="1" name="clone" source="jsx3.lang.Object"/>
  <method id="method:equals" idfk="method:equals" inherited="1" name="equals" source="jsx3.lang.Object"/>
  <method id="method:eval" idfk="method:eval" inherited="1" name="eval" source="jsx3.lang.Object"/>
  <method id="method:getClass" idfk="method:getClass" inherited="1" name="getClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOf" idfk="method:getInstanceOf" inherited="1" name="getInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfClass" idfk="method:getInstanceOfClass" inherited="1" name="getInstanceOfClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfPackage" idfk="method:getInstanceOfPackage" inherited="1" name="getInstanceOfPackage" source="jsx3.lang.Object"/>
  <method id="method:instanceOf" idfk="method:instanceOf" inherited="1" name="instanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isInstanceOf" idfk="method:isInstanceOf" inherited="1" name="isInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isSubclassOf" idfk="method:isSubclassOf" inherited="1" name="isSubclassOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:jsxmix" idfk="method:jsxmix" inherited="1" name="jsxmix" source="jsx3.lang.Object"/>
  <method id="method:jsxsuper" idfk="method:jsxsuper" inherited="1" name="jsxsuper" source="jsx3.lang.Object"/>
  <method id="method:jsxsupermix" idfk="method:jsxsupermix" inherited="1" name="jsxsupermix" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:setInstanceOf" idfk="method:setInstanceOf" inherited="1" name="setInstanceOf" source="jsx3.lang.Object"/>
  <method id="method:toString" idfk="method:toString" inherited="1" name="toString" source="jsx3.lang.Object"/>
</class>
