<?xml version="1.0" encoding="UTF-8"?>
<class access="public" id="class:jsx3.amp.util.MenuItem" name="jsx3.amp.util.MenuItem" package="jsx3.amp.util" shortname="MenuItem">
  <text>A managed menu item. Provided by the <code>jsx3.amp.util.menumgr</code> plug-in.</text>
  <see source="jsx3.amp.util.MenuManager">jsx3.amp.util.MenuManager</see>
  <superclass id="super:0" loaded="1" name="Object"/>
  <superclass direct="1" id="super:1" loaded="1" name="jsx3.lang.Object"/>
  <subclass id="sub:0" loaded="1" name="jsx3.amp.util.Menu"/>
  <constructor access="public" id="method:init" name="init">
    <param name="objExt" text="">
      <type link="1" name="jsx3.amp.Ext"/>
    </param>
    <param name="objData" text="">
      <type link="1" name="jsx3.amp.XML"/>
    </param>
    <text>The instance initializer.</text>
  </constructor>
  <method access="public" id="method:attr" name="attr">
    <param name="strKey" text="">
      <type link="1" name="String"/>
    </param>
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns an attribute of the XML declaration of this menu item.</text>
  </method>
  <method access="public" id="method:getId" name="getId">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the full ID of this menu item.</text>
  </method>
  <method access="public" id="method:getLabel" name="getLabel">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the label of this menu item.</text>
  </method>
  <method access="public" id="method:getImg" name="getImg">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the resolved image path of this item.</text>
  </method>
  <method access="public" id="method:getTip" name="getTip">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the tip of this menu item.</text>
  </method>
  <method access="public" id="method:getPath" name="getPath">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the path of this menu item.</text>
  </method>
  <method access="public" id="method:execute" name="execute">
    <text>Executes this menu item. If the <code>execute</code> attribute is not empty then the plug-in that
declared this menu item is loaded. Once the plug-in loads the contents of the <code>execute</code> attribute
are execute in the context of the extension that defined this menu item.
   </text>
  </method>
  <method access="public" id="method:isEnabled" name="isEnabled">
    <return text="">
      <type class="Boolean" link="1" name="boolean"/>
    </return>
    <text>Returns whether this menu item is enabled. This implementation interprets bind expressions in
the <code>enabled</code> attribute of the item definition. Otherwise this method returns <code>true</code>.</text>
  </method>
  <method access="public" id="method:isSelected" name="isSelected">
    <return text="">
      <type class="Boolean" link="1" name="boolean"/>
    </return>
    <text>Returns whether this menu item is selected. This implementation interprets bind expressions in
the <code>selected</code> attribute of the item definition. Otherwise this method returns <code>false</code>.</text>
  </method>
  <method access="public" id="method:getHotKey" name="getHotKey">
    <return text="">
      <type link="1" name="String"/>
    </return>
    <text>Returns the accelerator key code of this menu item.</text>
  </method>
  <method access="public" id="method:getMenu" name="getMenu">
    <return text="">
      <type link="1" name="jsx3.amp.util.Menu"/>
    </return>
    <text>Returns the menu that contains this menu item.</text>
  </method>
  <method access="public" id="method:getRootMenu" name="getRootMenu">
    <return text="">
      <type link="1" name="jsx3.amp.util.Menu"/>
    </return>
  </method>
  <method access="public" id="method:getExt" name="getExt">
    <return text="">
      <type link="1" name="jsx3.amp.Ext"/>
    </return>
    <text>Returns the extension that defined this menu item.</text>
  </method>
  <method id="method:clone" idfk="method:clone" inherited="1" name="clone" source="jsx3.lang.Object"/>
  <method id="method:equals" idfk="method:equals" inherited="1" name="equals" source="jsx3.lang.Object"/>
  <method id="method:eval" idfk="method:eval" inherited="1" name="eval" source="jsx3.lang.Object"/>
  <method id="method:getClass" idfk="method:getClass" inherited="1" name="getClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOf" idfk="method:getInstanceOf" inherited="1" name="getInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfClass" idfk="method:getInstanceOfClass" inherited="1" name="getInstanceOfClass" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:getInstanceOfPackage" idfk="method:getInstanceOfPackage" inherited="1" name="getInstanceOfPackage" source="jsx3.lang.Object"/>
  <method id="method:instanceOf" idfk="method:instanceOf" inherited="1" name="instanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isInstanceOf" idfk="method:isInstanceOf" inherited="1" name="isInstanceOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:isSubclassOf" idfk="method:isSubclassOf" inherited="1" name="isSubclassOf" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:jsxmix" idfk="method:jsxmix" inherited="1" name="jsxmix" source="jsx3.lang.Object"/>
  <method id="method:jsxsuper" idfk="method:jsxsuper" inherited="1" name="jsxsuper" source="jsx3.lang.Object"/>
  <method id="method:jsxsupermix" idfk="method:jsxsupermix" inherited="1" name="jsxsupermix" source="jsx3.lang.Object"/>
  <method deprecated="1" id="method:setInstanceOf" idfk="method:setInstanceOf" inherited="1" name="setInstanceOf" source="jsx3.lang.Object"/>
  <method id="method:toString" idfk="method:toString" inherited="1" name="toString" source="jsx3.lang.Object"/>
</class>
